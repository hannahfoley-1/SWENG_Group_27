name: .NET Core Desktop

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

jobs:

  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: CHIPSZ/CHIPSZ.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      #Test_Project_Path: CHIPSZTest/CHIPSZTest.csproj                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      #Wap_Project_Directory: CHIPSZ/Package.appxmanifest    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      #Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
      

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name : Install NuGet
      #uses: nuget/setup-nuget@v1
      run: nuget restore $env:Solution_Name
        
    - name: Restore dependencies
      run: dotnet restore $env:Solution_Name
      
    - name: Build app
      run: |
        cd CHIPSZ
        msbuild /t:build /p:Configuration=Release /p:Platform=arm64 /p:AppxBundle=Always /p:AppxBundlePlatforms="arm64"
        

      
 
