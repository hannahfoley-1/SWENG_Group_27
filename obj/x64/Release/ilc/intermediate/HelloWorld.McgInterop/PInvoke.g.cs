#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 64-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	/// <summary>
	/// P/Invoke class for module 'StereoKitC'
	/// </summary>
	public unsafe static partial class StereoKitC
	{
		// Signature, sk_init, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SKSettings__StereoKit__StereoKit__SKSettings__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_init")]
		public static int sk_init(global::StereoKit.SKSettings__StereoKit settings)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_init(settings);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_set_window, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_set_window")]
		public static void sk_set_window(global::System.IntPtr window)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sk_set_window(window);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_set_window_xam, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_set_window_xam")]
		public static void sk_set_window_xam(global::System.IntPtr window)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sk_set_window_xam(window);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_shutdown, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_shutdown")]
		public static void sk_shutdown()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sk_shutdown();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_quit, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_quit")]
		public static void sk_quit()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sk_quit();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_step, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041EA8] System_Action__System_Private_CoreLib__System__Action__System_Private_CoreLib, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_step")]
		public static bool sk_step(global::System.Action__System_Private_CoreLib app_update)
		{
			// Setup
			void* unsafe_app_update = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_app_update = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Action,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
									app_update
								);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_step(unsafe_app_update);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(app_update);
			}
		}

		// Signature, sk_run, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041EA8] System_Action__System_Private_CoreLib__System__Action__System_Private_CoreLib, [fwd] [in] [EETypeRva:0x00041EA8] System_Action__System_Private_CoreLib__System__Action__System_Private_CoreLib, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_run")]
		public static void sk_run(
					global::System.Action__System_Private_CoreLib app_update, 
					global::System.Action__System_Private_CoreLib app_shutdown)
		{
			// Setup
			void* unsafe_app_update = default(void*);
			void* unsafe_app_shutdown = default(void*);
			try
			{
				// Marshalling
				unsafe_app_update = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Action,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
									app_update
								);
				unsafe_app_shutdown = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Action,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
									app_shutdown
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sk_run(
									unsafe_app_update, 
									unsafe_app_shutdown
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(app_update);
				global::System.GC.KeepAlive(app_shutdown);
			}
		}

		// Signature, sk_active_display_mode, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_DisplayMode__StereoKit__DisplayMode__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_active_display_mode")]
		public static global::StereoKit.DisplayMode__StereoKit sk_active_display_mode()
		{
			// Setup
			global::StereoKit.DisplayMode__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_active_display_mode();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_system_info, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SystemInfo__StereoKit__StereoKit__SystemInfo__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_system_info")]
		public static global::StereoKit.SystemInfo__StereoKit sk_system_info()
		{
			// Setup
			global::StereoKit.SystemInfo__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_system_info();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_version_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_version_name")]
		public static global::System.IntPtr sk_version_name()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_version_name();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_version_id, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_version_id")]
		public static ulong sk_version_id()
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_version_id();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_app_focus, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_AppFocus__StereoKit__AppFocus__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_app_focus")]
		public static global::StereoKit.AppFocus__StereoKit sk_app_focus()
		{
			// Setup
			global::StereoKit.AppFocus__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sk_app_focus();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_getf_unscaled, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_getf_unscaled")]
		public static float time_getf_unscaled()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_getf_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_get_unscaled, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_get_unscaled")]
		public static double time_get_unscaled()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_get_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_getf, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_getf")]
		public static float time_getf()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_getf();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_get, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_get")]
		public static double time_get()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_get();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsedf_unscaled, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsedf_unscaled")]
		public static float time_elapsedf_unscaled()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_elapsedf_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsed_unscaled, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsed_unscaled")]
		public static double time_elapsed_unscaled()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_elapsed_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsedf, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsedf")]
		public static float time_elapsedf()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_elapsedf();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsed, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsed")]
		public static double time_elapsed()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.time_elapsed();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_scale, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_scale")]
		public static void time_scale(double scale)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.time_scale(scale);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, time_set_time, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [optional] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_set_time")]
		public static void time_set_time(
					double total_seconds, 
					double frame_elapsed_seconds)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.time_set_time(
								total_seconds, 
								frame_elapsed_seconds
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, quat_difference, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_difference")]
		public static global::StereoKit.Quat__StereoKit quat_difference(
					ref global::StereoKit.Quat__StereoKit a, 
					ref global::StereoKit.Quat__StereoKit b)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Quat__StereoKit* pinned_b = &(b))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.quat_difference(
										pinned_a, 
										pinned_b
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, quat_lookat, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_lookat")]
		public static global::StereoKit.Quat__StereoKit quat_lookat(
					ref global::StereoKit.Vec3__StereoKit from, 
					ref global::StereoKit.Vec3__StereoKit at)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_from = &(from))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_at = &(at))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.quat_lookat(
										pinned_from, 
										pinned_at
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, quat_lookat_up, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_lookat_up")]
		public static global::StereoKit.Quat__StereoKit quat_lookat_up(
					ref global::StereoKit.Vec3__StereoKit from, 
					ref global::StereoKit.Vec3__StereoKit at, 
					ref global::StereoKit.Vec3__StereoKit up)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_from = &(from))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_at = &(at))
					fixed (global::StereoKit.Vec3__StereoKit* pinned_up = &(up))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_PInvokes.quat_lookat_up(
											pinned_from, 
											pinned_at, 
											pinned_up
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_transform_pose, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_transform_pose")]
		public static global::StereoKit.Pose__StereoKit matrix_transform_pose(
					global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Pose__StereoKit pose)
		{
			// Setup
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.matrix_transform_pose(
								transform, 
								pose
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, matrix_trs, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_trs")]
		public static global::StereoKit.Matrix__StereoKit matrix_trs(
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit orientation, 
					ref global::StereoKit.Vec3__StereoKit scale)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_orientation = &(orientation))
					fixed (global::StereoKit.Vec3__StereoKit* pinned_scale = &(scale))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_PInvokes.matrix_trs(
											pinned_position, 
											pinned_orientation, 
											pinned_scale
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_extract_scale, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_extract_scale")]
		public static global::StereoKit.Vec3__StereoKit matrix_extract_scale(ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.matrix_extract_scale(pinned_transform);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_extract_rotation, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_extract_rotation")]
		public static global::StereoKit.Quat__StereoKit matrix_extract_rotation(ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.matrix_extract_rotation(pinned_transform);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_extract_pose, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_extract_pose")]
		public static global::StereoKit.Pose__StereoKit matrix_extract_pose(ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Setup
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.matrix_extract_pose(pinned_transform);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, plane_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Plane__StereoKit__StereoKit__Plane__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "plane_ray_intersect")]
		public static bool plane_ray_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.plane_ray_intersect(
									plane, 
									ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, plane_line_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Plane__StereoKit__StereoKit__Plane__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "plane_line_intersect")]
		public static bool plane_line_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit p1, 
					global::StereoKit.Vec3__StereoKit p2, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.plane_line_intersect(
									plane, 
									p1, 
									p2, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, plane_point_closest, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Plane__StereoKit__StereoKit__Plane__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "plane_point_closest")]
		public static global::StereoKit.Vec3__StereoKit plane_point_closest(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.plane_point_closest(
								plane, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sphere_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Sphere__StereoKit__StereoKit__Sphere__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sphere_ray_intersect")]
		public static bool sphere_ray_intersect(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sphere_ray_intersect(
									sphere, 
									ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, sphere_point_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Sphere__StereoKit__StereoKit__Sphere__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sphere_point_contains")]
		public static bool sphere_point_contains(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sphere_point_contains(
								sphere, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_ray_intersect")]
		public static bool bounds_ray_intersect(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.bounds_ray_intersect(
									bounds, 
									ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_point_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_point_contains")]
		public static bool bounds_point_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.bounds_point_contains(
								bounds, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_line_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_line_contains")]
		public static bool bounds_line_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit linePt1, 
					global::StereoKit.Vec3__StereoKit linePt2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.bounds_line_contains(
								bounds, 
								linePt1, 
								linePt2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_capsule_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_capsule_contains")]
		public static bool bounds_capsule_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit linePt1, 
					global::StereoKit.Vec3__StereoKit linePt2, 
					float radius)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.bounds_capsule_contains(
								bounds, 
								linePt1, 
								linePt2, 
								radius
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, ray_point_closest, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ray_point_closest")]
		public static global::StereoKit.Vec3__StereoKit ray_point_closest(
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ray_point_closest(
								ray, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, color_hsv, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_hsv")]
		public static global::StereoKit.Color__StereoKit color_hsv(
					float hue, 
					float saturation, 
					float value, 
					float transparency)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.color_hsv(
								hue, 
								saturation, 
								value, 
								transparency
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, color_to_hsv, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_to_hsv")]
		public static global::StereoKit.Vec3__StereoKit color_to_hsv(ref global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Color__StereoKit* pinned_color = &(color))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.color_to_hsv(pinned_color);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, color_lab, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_lab")]
		public static global::StereoKit.Color__StereoKit color_lab(
					float l, 
					float a, 
					float b, 
					float transparency)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.color_lab(
								l, 
								a, 
								b, 
								transparency
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, color_to_lab, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_to_lab")]
		public static global::StereoKit.Vec3__StereoKit color_to_lab(ref global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Color__StereoKit* pinned_color = &(color))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.color_to_lab(pinned_color);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, color_to_linear, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_to_linear")]
		public static global::StereoKit.Color__StereoKit color_to_linear(global::StereoKit.Color__StereoKit srgb_gamma_correct)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.color_to_linear(srgb_gamma_correct);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, color_to_gamma, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_to_gamma")]
		public static global::StereoKit.Color__StereoKit color_to_gamma(global::StereoKit.Color__StereoKit srgb_linear)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.color_to_gamma(srgb_linear);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_create")]
		public static global::System.IntPtr gradient_create()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.gradient_create();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_create_keys, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_GradientKey__StereoKit__StereoKit__GradientKey__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_create_keys")]
		public static global::System.IntPtr gradient_create_keys(
					global::StereoKit.GradientKey__StereoKit[] keys, 
					int count)
		{
			// Setup
			global::StereoKit.GradientKey__StereoKit* unsafe_keys = default(global::StereoKit.GradientKey__StereoKit*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (keys == null)
					unsafe_keys = null;
				else
				{
					if (keys != null)
						unsafe_keys = (global::StereoKit.GradientKey__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(keys.Length * sizeof(global::StereoKit.GradientKey__StereoKit))));
					if (keys != null)
						for (uint mcgIdx = 0; (mcgIdx < keys.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_GradientKey__StereoKit__StereoKit__GradientKey__StereoKit keys
							unsafe_keys[mcgIdx] = keys[mcgIdx];
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.gradient_create_keys(
									unsafe_keys, 
									count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_keys);
			}
		}

		// Signature, gradient_add, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_add")]
		public static void gradient_add(
					global::System.IntPtr gradient, 
					global::StereoKit.Color__StereoKit color, 
					float position)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.gradient_add(
								gradient, 
								color, 
								position
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, gradient_set, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_set")]
		public static void gradient_set(
					global::System.IntPtr gradient, 
					int index, 
					global::StereoKit.Color__StereoKit color, 
					float position)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.gradient_set(
								gradient, 
								index, 
								color, 
								position
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, gradient_remove, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_remove")]
		public static void gradient_remove(
					global::System.IntPtr gradient, 
					int index)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.gradient_remove(
								gradient, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, gradient_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_count")]
		public static int gradient_count(global::System.IntPtr gradient)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.gradient_count(gradient);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_get, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_get")]
		public static global::StereoKit.Color__StereoKit gradient_get(
					global::System.IntPtr gradient, 
					float at)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.gradient_get(
								gradient, 
								at
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_get32, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_get32")]
		public static global::StereoKit.Color32__StereoKit gradient_get32(
					global::System.IntPtr gradient, 
					float at)
		{
			// Setup
			global::StereoKit.Color32__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.gradient_get32(
								gradient, 
								at
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_release")]
		public static void gradient_release(global::System.IntPtr gradient)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.gradient_release(gradient);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sh_create, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_SHLight__StereoKit__StereoKit__SHLight__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_create")]
		public static global::StereoKit.SphericalHarmonics__StereoKit sh_create(
					global::StereoKit.SHLight__StereoKit[] lights, 
					int light_count)
		{
			// Setup
			global::StereoKit.SHLight__StereoKit* unsafe_lights = default(global::StereoKit.SHLight__StereoKit*);
			global::StereoKit.SphericalHarmonics__StereoKit unsafe___value;
			try
			{
				// Marshalling
				if (lights == null)
					unsafe_lights = null;
				else
				{
					if (lights != null)
						unsafe_lights = (global::StereoKit.SHLight__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(lights.Length * sizeof(global::StereoKit.SHLight__StereoKit))));
					if (lights != null)
						for (uint mcgIdx = 0; (mcgIdx < lights.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_SHLight__StereoKit__StereoKit__SHLight__StereoKit lights
							unsafe_lights[mcgIdx] = lights[mcgIdx];
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sh_create(
									unsafe_lights, 
									light_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_lights);
			}
		}

		// Signature, sh_brightness, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_brightness")]
		public static void sh_brightness(
					ref global::StereoKit.SphericalHarmonics__StereoKit harmonics, 
					float scale)
		{
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_harmonics = &(harmonics))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sh_brightness(
									pinned_harmonics, 
									scale
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sh_add, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_add")]
		public static void sh_add(
					ref global::StereoKit.SphericalHarmonics__StereoKit harmonics, 
					global::StereoKit.Vec3__StereoKit light_dir, 
					global::StereoKit.Vec3__StereoKit light_color)
		{
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_harmonics = &(harmonics))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sh_add(
									pinned_harmonics, 
									light_dir, 
									light_color
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sh_lookup, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_lookup")]
		public static global::StereoKit.Color__StereoKit sh_lookup(
					ref global::StereoKit.SphericalHarmonics__StereoKit harmonics, 
					global::StereoKit.Vec3__StereoKit normal)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_harmonics = &(harmonics))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sh_lookup(
									pinned_harmonics, 
									normal
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sh_dominant_dir, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_dominant_dir")]
		public static global::StereoKit.Vec3__StereoKit sh_dominant_dir(ref global::StereoKit.SphericalHarmonics__StereoKit harmonics)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_harmonics = &(harmonics))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sh_dominant_dir(pinned_harmonics);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, mesh_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_find")]
		public static global::System.IntPtr mesh_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, mesh_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_create")]
		public static global::System.IntPtr mesh_create()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_create();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_id")]
		public static void mesh_set_id(
					global::System.IntPtr mesh, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.mesh_set_id(
									mesh, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, mesh_addref, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_addref")]
		public static void mesh_addref(global::System.IntPtr mesh)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.mesh_addref(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_release")]
		public static void mesh_release(global::System.IntPtr mesh)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.mesh_release(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_set_keep_data, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_keep_data")]
		public static void mesh_set_keep_data(
					global::System.IntPtr mesh, 
					bool keep_data)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.mesh_set_keep_data(
								mesh, 
								(keep_data ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_get_keep_data, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_keep_data")]
		public static bool mesh_get_keep_data(global::System.IntPtr mesh)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_get_keep_data(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, mesh_set_verts, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_verts")]
		public static void mesh_set_verts(
					global::System.IntPtr mesh, 
					global::StereoKit.Vertex__StereoKit[] vertices, 
					int vertex_count, 
					bool calculate_bounds)
		{
			// Setup
			global::StereoKit.Vertex__StereoKit* unsafe_vertices = default(global::StereoKit.Vertex__StereoKit*);
			try
			{
				// Marshalling
				if (vertices == null)
					unsafe_vertices = null;
				else
				{
					if (vertices != null)
						unsafe_vertices = (global::StereoKit.Vertex__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(vertices.Length * sizeof(global::StereoKit.Vertex__StereoKit))));
					if (vertices != null)
						for (uint mcgIdx = 0; (mcgIdx < vertices.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit vertices
							unsafe_vertices[mcgIdx] = vertices[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.mesh_set_verts(
									mesh, 
									unsafe_vertices, 
									vertex_count, 
									(calculate_bounds ? 1 : 0)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_vertices);
			}
		}

		// Signature, mesh_get_verts, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Memory__StereoKit__Memory__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_verts")]
		public static void mesh_get_verts(
					global::System.IntPtr mesh, 
					out global::System.IntPtr out_vertices, 
					out int out_vertex_count, 
					global::StereoKit.Memory__StereoKit reference_mode)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_out_vertices = &(out_vertices))
				fixed (int* pinned_out_vertex_count = &(out_vertex_count))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.mesh_get_verts(
										mesh, 
										pinned_out_vertices, 
										pinned_out_vertex_count, 
										reference_mode
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, mesh_get_vert_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_vert_count")]
		public static int mesh_get_vert_count(global::System.IntPtr mesh)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_get_vert_count(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_set_inds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_uint__unsigned int *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_inds")]
		public static void mesh_set_inds(
					global::System.IntPtr mesh, 
					uint[] indices, 
					int index_count)
		{
			// Setup
			uint* unsafe_indices;
			// Marshalling
			fixed (uint* pinned_indices = ((indices != null 
						&& indices.Length == 0) ? new uint[1] : indices))
			{
				unsafe_indices = (uint*)pinned_indices;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.mesh_set_inds(
									mesh, 
									unsafe_indices, 
									index_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, mesh_get_inds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Memory__StereoKit__Memory__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_inds")]
		public static void mesh_get_inds(
					global::System.IntPtr mesh, 
					out global::System.IntPtr out_indices, 
					out int out_index_count, 
					global::StereoKit.Memory__StereoKit reference_mode)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_out_indices = &(out_indices))
				fixed (int* pinned_out_index_count = &(out_index_count))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.mesh_get_inds(
										mesh, 
										pinned_out_indices, 
										pinned_out_index_count, 
										reference_mode
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, mesh_get_ind_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_ind_count")]
		public static int mesh_get_ind_count(global::System.IntPtr mesh)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_get_ind_count(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_set_draw_inds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_draw_inds")]
		public static void mesh_set_draw_inds(
					global::System.IntPtr mesh, 
					int index_count)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.mesh_set_draw_inds(
								mesh, 
								index_count
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_set_bounds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_bounds")]
		public static void mesh_set_bounds(
					global::System.IntPtr mesh, 
					ref global::StereoKit.Bounds__StereoKit bounds)
		{
			// Marshalling
			fixed (global::StereoKit.Bounds__StereoKit* pinned_bounds = &(bounds))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.mesh_set_bounds(
									mesh, 
									pinned_bounds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, mesh_get_bounds, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_bounds")]
		public static global::StereoKit.Bounds__StereoKit mesh_get_bounds(global::System.IntPtr mesh)
		{
			// Setup
			global::StereoKit.Bounds__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_get_bounds(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_ray_intersect, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_ray_intersect")]
		public static int mesh_ray_intersect(
					global::System.IntPtr mesh, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					out global::StereoKit.Ray__StereoKit out_pt, 
					global::System.IntPtr out_start_inds)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Ray__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_ray_intersect(
									mesh, 
									model_space_ray, 
									pinned_out_pt, 
									out_start_inds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, mesh_ray_intersect__0, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_ray_intersect")]
		public static int mesh_ray_intersect__0(
					global::System.IntPtr mesh, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					out global::StereoKit.Ray__StereoKit out_pt, 
					out uint out_start_inds)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Ray__StereoKit* pinned_out_pt = &(out_pt))
				fixed (uint* pinned_out_start_inds = &(out_start_inds))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_ray_intersect__0(
										mesh, 
										model_space_ray, 
										pinned_out_pt, 
										pinned_out_start_inds
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, mesh_get_triangle, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_triangle")]
		public static int mesh_get_triangle(
					global::System.IntPtr mesh, 
					uint triangle_index, 
					out global::StereoKit.Vertex__StereoKit a, 
					out global::StereoKit.Vertex__StereoKit b, 
					out global::StereoKit.Vertex__StereoKit c)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vertex__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Vertex__StereoKit* pinned_b = &(b))
					fixed (global::StereoKit.Vertex__StereoKit* pinned_c = &(c))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_get_triangle(
											mesh, 
											triangle_index, 
											pinned_a, 
											pinned_b, 
											pinned_c
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_plane, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_plane")]
		public static global::System.IntPtr mesh_gen_plane(
					global::StereoKit.Vec2__StereoKit dimensions, 
					global::StereoKit.Vec3__StereoKit plane_normal, 
					global::StereoKit.Vec3__StereoKit plane_top_direction, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_gen_plane(
								dimensions, 
								plane_normal, 
								plane_top_direction, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_cube, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_cube")]
		public static global::System.IntPtr mesh_gen_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_gen_cube(
								dimensions, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_sphere, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_sphere")]
		public static global::System.IntPtr mesh_gen_sphere(
					float diameter, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_gen_sphere(
								diameter, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_rounded_cube, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_rounded_cube")]
		public static global::System.IntPtr mesh_gen_rounded_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					float edge_radius, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_gen_rounded_cube(
								dimensions, 
								edge_radius, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_cylinder, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_cylinder")]
		public static global::System.IntPtr mesh_gen_cylinder(
					float diameter, 
					float depth, 
					global::StereoKit.Vec3__StereoKit direction, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mesh_gen_cylinder(
								diameter, 
								depth, 
								direction, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_find")]
		public static global::System.IntPtr tex_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, tex_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexType__StereoKit__TexType__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create")]
		public static global::System.IntPtr tex_create(
					global::StereoKit.TexType__StereoKit type, 
					global::StereoKit.TexFormat__StereoKit format)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create(
								type, 
								format
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_color32, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_color32")]
		public static global::System.IntPtr tex_create_color32(
					global::StereoKit.Color32__StereoKit[] data, 
					int width, 
					int height, 
					int srgb_data)
		{
			// Setup
			global::StereoKit.Color32__StereoKit* unsafe_data = default(global::StereoKit.Color32__StereoKit*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (data == null)
					unsafe_data = null;
				else
				{
					if (data != null)
						unsafe_data = (global::StereoKit.Color32__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(data.Length * sizeof(global::StereoKit.Color32__StereoKit))));
					if (data != null)
						for (uint mcgIdx = 0; (mcgIdx < data.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit data
							unsafe_data[mcgIdx] = data[mcgIdx];
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_color32(
									unsafe_data, 
									width, 
									height, 
									srgb_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_data);
			}
		}

		// Signature, tex_create_color128, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Color__StereoKit__StereoKit__Color__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_color128")]
		public static global::System.IntPtr tex_create_color128(
					global::StereoKit.Color__StereoKit[] data, 
					int width, 
					int height, 
					int srgb_data)
		{
			// Setup
			global::StereoKit.Color__StereoKit* unsafe_data = default(global::StereoKit.Color__StereoKit*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (data == null)
					unsafe_data = null;
				else
				{
					if (data != null)
						unsafe_data = (global::StereoKit.Color__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(data.Length * sizeof(global::StereoKit.Color__StereoKit))));
					if (data != null)
						for (uint mcgIdx = 0; (mcgIdx < data.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit data
							unsafe_data[mcgIdx] = data[mcgIdx];
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_color128(
									unsafe_data, 
									width, 
									height, 
									srgb_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_data);
			}
		}

		// Signature, tex_create_mem, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_UIntPtr____w64 unsigned int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_mem")]
		public static global::System.IntPtr tex_create_mem(
					byte[] data, 
					global::System.UIntPtr data_size, 
					int srgb_data, 
					int priority)
		{
			// Setup
			byte* unsafe_data;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_mem(
									unsafe_data, 
									data_size, 
									srgb_data, 
									priority
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_file")]
		public static global::System.IntPtr tex_create_file(
					byte[] file_utf8, 
					int srgb_data, 
					int priority)
		{
			// Setup
			byte* unsafe_file_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_file_utf8 = ((file_utf8 != null 
						&& file_utf8.Length == 0) ? new byte[1] : file_utf8))
			{
				unsafe_file_utf8 = (byte*)pinned_file_utf8;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_file(
									unsafe_file_utf8, 
									srgb_data, 
									priority
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_file_arr, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_string__unsigned char * *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_file_arr")]
		public static global::System.IntPtr tex_create_file_arr(
					string[] files, 
					int file_count, 
					int srgb_data, 
					int priority)
		{
			// Setup
			byte** unsafe_files = default(byte**);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (files == null)
					unsafe_files = null;
				else
				{
					if (files != null)
						unsafe_files = (byte**)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(files.Length * sizeof(byte*))));
					if (files != null)
						for (uint mcgIdx = 0; (mcgIdx < files.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char * files
							unsafe_files[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(files[mcgIdx], true, false);
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_file_arr(
									unsafe_files, 
									file_count, 
									srgb_data, 
									priority
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				if (unsafe_files != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < files.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [EETypeRva:0x00041C30] string__unsigned char * files
						global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_files[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_files);
			}
		}

		// Signature, tex_create_cubemap_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_file")]
		public static global::System.IntPtr tex_create_cubemap_file(
					byte[] equirectangular_file_utf8, 
					int srgb_data, 
					global::System.IntPtr lighting_info, 
					int priority)
		{
			// Setup
			byte* unsafe_equirectangular_file_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_equirectangular_file_utf8 = ((equirectangular_file_utf8 != null 
						&& equirectangular_file_utf8.Length == 0) ? new byte[1] : equirectangular_file_utf8))
			{
				unsafe_equirectangular_file_utf8 = (byte*)pinned_equirectangular_file_utf8;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_cubemap_file(
									unsafe_equirectangular_file_utf8, 
									srgb_data, 
									lighting_info, 
									priority
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_cubemap_file__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_file")]
		public static global::System.IntPtr tex_create_cubemap_file__0(
					byte[] equirectangular_file_utf8, 
					int srgb_data, 
					out global::StereoKit.SphericalHarmonics__StereoKit lighting_info, 
					int priority)
		{
			// Setup
			byte* unsafe_equirectangular_file_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_equirectangular_file_utf8 = ((equirectangular_file_utf8 != null 
						&& equirectangular_file_utf8.Length == 0) ? new byte[1] : equirectangular_file_utf8))
			{
				unsafe_equirectangular_file_utf8 = (byte*)pinned_equirectangular_file_utf8;
				fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_cubemap_file__0(
										unsafe_equirectangular_file_utf8, 
										srgb_data, 
										pinned_lighting_info, 
										priority
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_cubemap_files, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_string__unsigned char * *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_files")]
		public static global::System.IntPtr tex_create_cubemap_files(
					string[] cube_face_file_xxyyzz, 
					int srgb_data, 
					global::System.IntPtr lighting_info, 
					int priority)
		{
			// Setup
			byte** unsafe_cube_face_file_xxyyzz = default(byte**);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (cube_face_file_xxyyzz == null)
					unsafe_cube_face_file_xxyyzz = null;
				else
				{
					if (cube_face_file_xxyyzz != null)
						unsafe_cube_face_file_xxyyzz = (byte**)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(cube_face_file_xxyyzz.Length * sizeof(byte*))));
					if (cube_face_file_xxyyzz != null)
						for (uint mcgIdx = 0; (mcgIdx < cube_face_file_xxyyzz.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
							unsafe_cube_face_file_xxyyzz[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(cube_face_file_xxyyzz[mcgIdx], true, false);
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_cubemap_files(
									unsafe_cube_face_file_xxyyzz, 
									srgb_data, 
									lighting_info, 
									priority
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				if (unsafe_cube_face_file_xxyyzz != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < cube_face_file_xxyyzz.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
						global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz);
			}
		}

		// Signature, tex_create_cubemap_files__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_string__unsigned char * *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_files")]
		public static global::System.IntPtr tex_create_cubemap_files__0(
					string[] cube_face_file_xxyyzz, 
					int srgb_data, 
					out global::StereoKit.SphericalHarmonics__StereoKit lighting_info, 
					int priority)
		{
			// Setup
			byte** unsafe_cube_face_file_xxyyzz = default(byte**);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (cube_face_file_xxyyzz == null)
					unsafe_cube_face_file_xxyyzz = null;
				else
				{
					if (cube_face_file_xxyyzz != null)
						unsafe_cube_face_file_xxyyzz = (byte**)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(cube_face_file_xxyyzz.Length * sizeof(byte*))));
					if (cube_face_file_xxyyzz != null)
						for (uint mcgIdx = 0; (mcgIdx < cube_face_file_xxyyzz.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
							unsafe_cube_face_file_xxyyzz[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(cube_face_file_xxyyzz[mcgIdx], true, false);
						}
				}
				fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_create_cubemap_files__0(
										unsafe_cube_face_file_xxyyzz, 
										srgb_data, 
										pinned_lighting_info, 
										priority
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				if (unsafe_cube_face_file_xxyyzz != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < cube_face_file_xxyyzz.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
						global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz);
			}
		}

		// Signature, tex_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_id")]
		public static void tex_set_id(
					global::System.IntPtr texture, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_set_id(
									texture, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, tex_set_fallback, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_fallback")]
		public static void tex_set_fallback(
					global::System.IntPtr texture, 
					global::System.IntPtr fallback)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_fallback(
								texture, 
								fallback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_release")]
		public static void tex_release(global::System.IntPtr texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_release(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_addref, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_addref")]
		public static void tex_addref(global::System.IntPtr texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_addref(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_asset_state, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_AssetState__StereoKit__AssetState__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_asset_state")]
		public static global::StereoKit.AssetState__StereoKit tex_asset_state(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.AssetState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_asset_state(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_on_load, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_AssetOnLoadCallback__StereoKit__StereoKit__AssetOnLoadCallback__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_on_load")]
		public static void tex_on_load(
					global::System.IntPtr texture, 
					global::StereoKit.AssetOnLoadCallback__StereoKit on_load, 
					global::System.IntPtr context)
		{
			// Setup
			void* unsafe_on_load = default(void*);
			try
			{
				// Marshalling
				unsafe_on_load = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.AssetOnLoadCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									on_load
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_on_load(
									texture, 
									unsafe_on_load, 
									context
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_load);
			}
		}

		// Signature, tex_on_load_remove, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_AssetOnLoadCallback__StereoKit__StereoKit__AssetOnLoadCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_on_load_remove")]
		public static void tex_on_load_remove(
					global::System.IntPtr texture, 
					global::StereoKit.AssetOnLoadCallback__StereoKit on_load)
		{
			// Setup
			void* unsafe_on_load = default(void*);
			try
			{
				// Marshalling
				unsafe_on_load = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.AssetOnLoadCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									on_load
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_on_load_remove(
									texture, 
									unsafe_on_load
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_load);
			}
		}

		// Signature, tex_set_colors, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::System.IntPtr data)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_colors(
								texture, 
								width, 
								height, 
								data
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_set_colors__0, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__0(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color32__StereoKit[] data)
		{
			// Setup
			global::StereoKit.Color32__StereoKit* unsafe_data = default(global::StereoKit.Color32__StereoKit*);
			try
			{
				// Marshalling
				if (data == null)
					unsafe_data = null;
				else
				{
					if (data != null)
						unsafe_data = (global::StereoKit.Color32__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(data.Length * sizeof(global::StereoKit.Color32__StereoKit))));
					if (data != null)
						for (uint mcgIdx = 0; (mcgIdx < data.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit data
							unsafe_data[mcgIdx] = data[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_set_colors__0(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_data);
			}
		}

		// Signature, tex_set_colors__1, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Color__StereoKit__StereoKit__Color__StereoKit *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__1(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color__StereoKit[] data)
		{
			// Setup
			global::StereoKit.Color__StereoKit* unsafe_data = default(global::StereoKit.Color__StereoKit*);
			try
			{
				// Marshalling
				if (data == null)
					unsafe_data = null;
				else
				{
					if (data != null)
						unsafe_data = (global::StereoKit.Color__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(data.Length * sizeof(global::StereoKit.Color__StereoKit))));
					if (data != null)
						for (uint mcgIdx = 0; (mcgIdx < data.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit data
							unsafe_data[mcgIdx] = data[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_set_colors__1(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_data);
			}
		}

		// Signature, tex_set_colors__2, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__2(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					byte[] data)
		{
			// Setup
			byte* unsafe_data;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_set_colors__2(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, tex_set_colors__3, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_ushort__unsigned short *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__3(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					ushort[] data)
		{
			// Setup
			ushort* unsafe_data;
			// Marshalling
			fixed (ushort* pinned_data = ((data != null 
						&& data.Length == 0) ? new ushort[1] : data))
			{
				unsafe_data = (ushort*)pinned_data;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_set_colors__3(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, tex_set_colors__4, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_float__float *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__4(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					float[] data)
		{
			// Setup
			float* unsafe_data;
			// Marshalling
			fixed (float* pinned_data = ((data != null 
						&& data.Length == 0) ? new float[1] : data))
			{
				unsafe_data = (float*)pinned_data;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.tex_set_colors__4(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, tex_set_surface, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TexType__StereoKit__TexType__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] long____int64, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_surface")]
		public static void tex_set_surface(
					global::System.IntPtr texture, 
					global::System.IntPtr native_surface, 
					global::StereoKit.TexType__StereoKit type, 
					long native_fmt, 
					int width, 
					int height, 
					int surface_count)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_surface(
								texture, 
								native_surface, 
								type, 
								native_fmt, 
								width, 
								height, 
								surface_count
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_add_zbuffer, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_add_zbuffer")]
		public static global::System.IntPtr tex_add_zbuffer(
					global::System.IntPtr texture, 
					global::StereoKit.TexFormat__StereoKit format)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_add_zbuffer(
								texture, 
								format
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_data, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_data")]
		public static void tex_get_data(
					global::System.IntPtr texture, 
					global::System.IntPtr out_data, 
					global::System.UIntPtr out_data_size)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_get_data(
								texture, 
								out_data, 
								out_data_size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_gen_color, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TexType__StereoKit__TexType__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_color")]
		public static global::System.IntPtr tex_gen_color(
					global::StereoKit.Color__StereoKit color, 
					int width, 
					int height, 
					global::StereoKit.TexType__StereoKit type, 
					global::StereoKit.TexFormat__StereoKit format)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_gen_color(
								color, 
								width, 
								height, 
								type, 
								format
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_gen_cubemap, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_cubemap")]
		public static global::System.IntPtr tex_gen_cubemap(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					global::System.IntPtr lighting_info)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_gen_cubemap(
								gradient, 
								gradient_dir, 
								resolution, 
								lighting_info
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_gen_cubemap__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_cubemap")]
		public static global::System.IntPtr tex_gen_cubemap__0(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					out global::StereoKit.SphericalHarmonics__StereoKit lighting_info)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_gen_cubemap__0(
									gradient, 
									gradient_dir, 
									resolution, 
									pinned_lighting_info
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_gen_cubemap_sh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_cubemap_sh")]
		public static global::System.IntPtr tex_gen_cubemap_sh(
					ref global::StereoKit.SphericalHarmonics__StereoKit lighting, 
					int resolution, 
					float light_spot_size_pct, 
					float light_spot_intensity)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting = &(lighting))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_gen_cubemap_sh(
									pinned_lighting, 
									resolution, 
									light_spot_size_pct, 
									light_spot_intensity
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_format, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_format")]
		public static global::StereoKit.TexFormat__StereoKit tex_get_format(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.TexFormat__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_format(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_width, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_width")]
		public static int tex_get_width(global::System.IntPtr texture)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_width(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_height, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_height")]
		public static int tex_get_height(global::System.IntPtr texture)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_height(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_sample, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexSample__StereoKit__TexSample__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_sample")]
		public static void tex_set_sample(
					global::System.IntPtr texture, 
					global::StereoKit.TexSample__StereoKit sample)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_sample(
								texture, 
								sample
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_sample, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_TexSample__StereoKit__TexSample__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_sample")]
		public static global::StereoKit.TexSample__StereoKit tex_get_sample(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.TexSample__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_sample(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_address, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexAddress__StereoKit__TexAddress__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_address")]
		public static void tex_set_address(
					global::System.IntPtr texture, 
					global::StereoKit.TexAddress__StereoKit address_mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_address(
								texture, 
								address_mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_address, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_TexAddress__StereoKit__TexAddress__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_address")]
		public static global::StereoKit.TexAddress__StereoKit tex_get_address(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.TexAddress__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_address(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_anisotropy, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_anisotropy")]
		public static void tex_set_anisotropy(
					global::System.IntPtr texture, 
					int anisotropy_level)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_anisotropy(
								texture, 
								anisotropy_level
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_anisotropy, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_anisotropy")]
		public static int tex_get_anisotropy(global::System.IntPtr texture)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_anisotropy(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_loading_fallback, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_loading_fallback")]
		public static void tex_set_loading_fallback(global::System.IntPtr texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_loading_fallback(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_set_error_fallback, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_error_fallback")]
		public static void tex_set_error_fallback(global::System.IntPtr texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.tex_set_error_fallback(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_cubemap_lighting, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_cubemap_lighting")]
		public static global::StereoKit.SphericalHarmonics__StereoKit tex_get_cubemap_lighting(global::System.IntPtr cubemap_texture)
		{
			// Setup
			global::StereoKit.SphericalHarmonics__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.tex_get_cubemap_lighting(cubemap_texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, font_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_find")]
		public static global::System.IntPtr font_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.font_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, font_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_create")]
		public static global::System.IntPtr font_create(byte[] file_utf8)
		{
			// Setup
			byte* unsafe_file_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_file_utf8 = ((file_utf8 != null 
						&& file_utf8.Length == 0) ? new byte[1] : file_utf8))
			{
				unsafe_file_utf8 = (byte*)pinned_file_utf8;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.font_create(unsafe_file_utf8);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, font_create_files, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_string__unsigned char * *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_create_files")]
		public static global::System.IntPtr font_create_files(
					string[] file, 
					int file_count)
		{
			// Setup
			byte** unsafe_file = default(byte**);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (file == null)
					unsafe_file = null;
				else
				{
					if (file != null)
						unsafe_file = (byte**)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(file.Length * sizeof(byte*))));
					if (file != null)
						for (uint mcgIdx = 0; (mcgIdx < file.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char * file
							unsafe_file[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(file[mcgIdx], true, false);
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.font_create_files(
									unsafe_file, 
									file_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				if (unsafe_file != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < file.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [EETypeRva:0x00041C30] string__unsigned char * file
						global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_file[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_file);
			}
		}

		// Signature, font_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_release")]
		public static void font_release(global::System.IntPtr font)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.font_release(font);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, font_get_tex, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_get_tex")]
		public static global::System.IntPtr font_get_tex(global::System.IntPtr font)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.font_get_tex(font);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, shader_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_find")]
		public static global::System.IntPtr shader_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.shader_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, shader_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_create_file")]
		public static global::System.IntPtr shader_create_file(byte[] filename_utf8)
		{
			// Setup
			byte* unsafe_filename_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_filename_utf8 = ((filename_utf8 != null 
						&& filename_utf8.Length == 0) ? new byte[1] : filename_utf8))
			{
				unsafe_filename_utf8 = (byte*)pinned_filename_utf8;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.shader_create_file(unsafe_filename_utf8);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, shader_create_mem, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_create_mem")]
		public static global::System.IntPtr shader_create_mem(
					byte[] data, 
					global::System.UIntPtr data_size)
		{
			// Setup
			byte* unsafe_data;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.shader_create_mem(
									unsafe_data, 
									data_size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, shader_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_set_id")]
		public static void shader_set_id(
					global::System.IntPtr shader, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.shader_set_id(
									shader, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, shader_get_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_get_name")]
		public static global::System.IntPtr shader_get_name(global::System.IntPtr shader)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.shader_get_name(shader);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, shader_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_release")]
		public static void shader_release(global::System.IntPtr shader)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.shader_release(shader);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_find")]
		public static global::System.IntPtr material_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.material_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, material_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_create")]
		public static global::System.IntPtr material_create(global::System.IntPtr shader)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_create(shader);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_copy, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_copy")]
		public static global::System.IntPtr material_copy(global::System.IntPtr material)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_copy(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_copy_id, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_copy_id")]
		public static global::System.IntPtr material_copy_id(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.material_copy_id(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, material_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_id")]
		public static void material_set_id(
					global::System.IntPtr material, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_id(
									material, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, material_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_release")]
		public static void material_release(global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_release(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_transparency, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Transparency__StereoKit__Transparency__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_transparency")]
		public static void material_set_transparency(
					global::System.IntPtr material, 
					global::StereoKit.Transparency__StereoKit mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_transparency(
								material, 
								mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_cull, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Cull__StereoKit__Cull__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_cull")]
		public static void material_set_cull(
					global::System.IntPtr material, 
					global::StereoKit.Cull__StereoKit mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_cull(
								material, 
								mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_wireframe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_wireframe")]
		public static void material_set_wireframe(
					global::System.IntPtr material, 
					bool wireframe)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_wireframe(
								material, 
								(wireframe ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_depth_test, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_DepthTest__StereoKit__DepthTest__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_depth_test")]
		public static void material_set_depth_test(
					global::System.IntPtr material, 
					global::StereoKit.DepthTest__StereoKit depth_test_mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_depth_test(
								material, 
								depth_test_mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_depth_write, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_depth_write")]
		public static void material_set_depth_write(
					global::System.IntPtr material, 
					bool write_enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_depth_write(
								material, 
								(write_enabled ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_queue_offset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_queue_offset")]
		public static void material_set_queue_offset(
					global::System.IntPtr material, 
					int offset)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_queue_offset(
								material, 
								offset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_get_transparency, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_Transparency__StereoKit__Transparency__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_transparency")]
		public static global::StereoKit.Transparency__StereoKit material_get_transparency(global::System.IntPtr material)
		{
			// Setup
			global::StereoKit.Transparency__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_transparency(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_get_cull, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_Cull__StereoKit__Cull__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_cull")]
		public static global::StereoKit.Cull__StereoKit material_get_cull(global::System.IntPtr material)
		{
			// Setup
			global::StereoKit.Cull__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_cull(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_get_wireframe, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_wireframe")]
		public static int material_get_wireframe(global::System.IntPtr material)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_wireframe(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_get_depth_test, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_DepthTest__StereoKit__DepthTest__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_depth_test")]
		public static global::StereoKit.DepthTest__StereoKit material_get_depth_test(global::System.IntPtr material)
		{
			// Setup
			global::StereoKit.DepthTest__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_depth_test(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_get_depth_write, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_depth_write")]
		public static int material_get_depth_write(global::System.IntPtr material)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_depth_write(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_get_queue_offset, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_queue_offset")]
		public static int material_get_queue_offset(global::System.IntPtr material)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_queue_offset(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_set_float, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_float")]
		public static void material_set_float(
					global::System.IntPtr material, 
					string name, 
					float value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_float(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_color, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_color")]
		public static void material_set_color(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Color__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_color(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_vector4, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec4__StereoKit__StereoKit__Vec4__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_vector4")]
		public static void material_set_vector4(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Vec4__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_vector4(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_vector3, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_vector3")]
		public static void material_set_vector3(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Vec3__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_vector3(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_vector2, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_vector2")]
		public static void material_set_vector2(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Vec2__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_vector2(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_int, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_int")]
		public static void material_set_int(
					global::System.IntPtr material, 
					string name, 
					int value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_int(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_int2, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_int2")]
		public static void material_set_int2(
					global::System.IntPtr material, 
					string name, 
					int value1, 
					int value2)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_int2(
									material, 
									unsafe_name, 
									value1, 
									value2
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_int3, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_int3")]
		public static void material_set_int3(
					global::System.IntPtr material, 
					string name, 
					int value1, 
					int value2, 
					int value3)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_int3(
									material, 
									unsafe_name, 
									value1, 
									value2, 
									value3
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_int4, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_int4")]
		public static void material_set_int4(
					global::System.IntPtr material, 
					string name, 
					int value1, 
					int value2, 
					int value3, 
					int value4)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_int4(
									material, 
									unsafe_name, 
									value1, 
									value2, 
									value3, 
									value4
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_bool, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_bool")]
		public static void material_set_bool(
					global::System.IntPtr material, 
					string name, 
					int value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_bool(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_uint, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_uint")]
		public static void material_set_uint(
					global::System.IntPtr material, 
					string name, 
					uint value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_uint(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_uint2, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_uint2")]
		public static void material_set_uint2(
					global::System.IntPtr material, 
					string name, 
					uint value1, 
					uint value2)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_uint2(
									material, 
									unsafe_name, 
									value1, 
									value2
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_uint3, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_uint3")]
		public static void material_set_uint3(
					global::System.IntPtr material, 
					string name, 
					uint value1, 
					uint value2, 
					uint value3)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_uint3(
									material, 
									unsafe_name, 
									value1, 
									value2, 
									value3
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_uint4, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_uint4")]
		public static void material_set_uint4(
					global::System.IntPtr material, 
					string name, 
					uint value1, 
					uint value2, 
					uint value3, 
					uint value4)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_uint4(
									material, 
									unsafe_name, 
									value1, 
									value2, 
									value3, 
									value4
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_matrix, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_matrix")]
		public static void material_set_matrix(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Matrix__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_matrix(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_texture, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_texture")]
		public static int material_set_texture(
					global::System.IntPtr material, 
					string name, 
					global::System.IntPtr value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.material_set_texture(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_texture_id, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_texture_id")]
		public static int material_set_texture_id(
					global::System.IntPtr material, 
					ulong id, 
					global::System.IntPtr value)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_set_texture_id(
								material, 
								id, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_set_param, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_MaterialParam__StereoKit__MaterialParam__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_param")]
		public static void material_set_param(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.MaterialParam__StereoKit type, 
					global::System.IntPtr value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.material_set_param(
									material, 
									unsafe_name, 
									type, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_get_param_info, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_MaterialParam__StereoKit__MaterialParam__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_param_info")]
		public static void material_get_param_info(
					global::System.IntPtr material, 
					int index, 
					out global::System.IntPtr out_name, 
					out global::StereoKit.MaterialParam__StereoKit out_type)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_out_name = &(out_name))
				fixed (global::StereoKit.MaterialParam__StereoKit* pinned_out_type = &(out_type))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.material_get_param_info(
										material, 
										index, 
										pinned_out_name, 
										pinned_out_type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, material_get_param_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_param_count")]
		public static int material_get_param_count(global::System.IntPtr material)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_param_count(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_set_shader, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_shader")]
		public static void material_set_shader(
					global::System.IntPtr material, 
					global::System.IntPtr shader)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_set_shader(
								material, 
								shader
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_get_shader, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_shader")]
		public static global::System.IntPtr material_get_shader(global::System.IntPtr material)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_get_shader(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_buffer_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_buffer_create")]
		public static global::System.IntPtr material_buffer_create(
					int slot, 
					int size)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.material_buffer_create(
								slot, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_buffer_set_data, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_buffer_set_data")]
		public static void material_buffer_set_data(
					global::System.IntPtr buffer, 
					global::System.IntPtr data)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_buffer_set_data(
								buffer, 
								data
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_buffer_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_buffer_release")]
		public static void material_buffer_release(global::System.IntPtr buffer)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.material_buffer_release(buffer);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, text_make_style, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_make_style")]
		public static global::StereoKit.TextStyle__StereoKit text_make_style(
					global::System.IntPtr font, 
					float character_height, 
					global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.TextStyle__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.text_make_style(
								font, 
								character_height, 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, text_make_style_shader, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_make_style_shader")]
		public static global::StereoKit.TextStyle__StereoKit text_make_style_shader(
					global::System.IntPtr font, 
					float character_height, 
					global::System.IntPtr shader, 
					global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.TextStyle__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.text_make_style_shader(
								font, 
								character_height, 
								shader, 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, text_make_style_mat, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_make_style_mat")]
		public static global::StereoKit.TextStyle__StereoKit text_make_style_mat(
					global::System.IntPtr font, 
					float character_height, 
					global::System.IntPtr material, 
					global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.TextStyle__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.text_make_style_mat(
								font, 
								character_height, 
								material, 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, text_add_at_16, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_add_at_16")]
		public static void text_add_at_16(
					string text, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					uint style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z, 
					global::StereoKit.Color__StereoKit vertex_tint_linear)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.text_add_at_16(
										unsafe_text, 
										pinned_transform, 
										style, 
										position, 
										align, 
										off_x, 
										off_y, 
										off_z, 
										vertex_tint_linear
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
		}

		// Signature, text_add_in_16, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextFit__StereoKit__TextFit__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_add_in_16")]
		public static float text_add_in_16(
					string text, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.TextFit__StereoKit fit, 
					uint style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z, 
					global::StereoKit.Color__StereoKit vertex_tint_linear)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			float unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.text_add_in_16(
										unsafe_text, 
										pinned_transform, 
										size, 
										fit, 
										style, 
										position, 
										align, 
										off_x, 
										off_y, 
										off_z, 
										vertex_tint_linear
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, text_size_16, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_size_16")]
		public static global::StereoKit.Vec2__StereoKit text_size_16(
					string text, 
					uint style)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.text_size_16(
									unsafe_text, 
									style
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, text_style_get_material, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_style_get_material")]
		public static global::System.IntPtr text_style_get_material(global::StereoKit.TextStyle__StereoKit style)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.text_style_get_material(style);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, text_style_get_char_height, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_style_get_char_height")]
		public static float text_style_get_char_height(global::StereoKit.TextStyle__StereoKit style)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.text_style_get_char_height(style);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, solid_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_SolidType__StereoKit__SolidType__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_create")]
		public static global::System.IntPtr solid_create(
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit rotation, 
					global::StereoKit.SolidType__StereoKit type)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_rotation = &(rotation))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.solid_create(
										pinned_position, 
										pinned_rotation, 
										type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, solid_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_release")]
		public static void solid_release(global::System.IntPtr solid)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.solid_release(solid);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, solid_add_sphere, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_add_sphere")]
		public static void solid_add_sphere(
					global::System.IntPtr solid, 
					float diameter, 
					float kilograms, 
					ref global::StereoKit.Vec3__StereoKit offset)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_offset = &(offset))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.solid_add_sphere(
									solid, 
									diameter, 
									kilograms, 
									pinned_offset
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_add_box, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_add_box")]
		public static void solid_add_box(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit dimensions, 
					float kilograms, 
					ref global::StereoKit.Vec3__StereoKit offset)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_dimensions = &(dimensions))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_offset = &(offset))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.solid_add_box(
										solid, 
										pinned_dimensions, 
										kilograms, 
										pinned_offset
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, solid_add_capsule, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_add_capsule")]
		public static void solid_add_capsule(
					global::System.IntPtr solid, 
					float diameter, 
					float height, 
					float kilograms, 
					ref global::StereoKit.Vec3__StereoKit offset)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_offset = &(offset))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.solid_add_capsule(
									solid, 
									diameter, 
									height, 
									kilograms, 
									pinned_offset
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_set_type, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_SolidType__StereoKit__SolidType__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_type")]
		public static void solid_set_type(
					global::System.IntPtr solid, 
					global::StereoKit.SolidType__StereoKit type)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.solid_set_type(
								solid, 
								type
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, solid_set_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_enabled")]
		public static void solid_set_enabled(
					global::System.IntPtr solid, 
					int enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.solid_set_enabled(
								solid, 
								enabled
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, solid_move, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_move")]
		public static void solid_move(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit rotation)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_rotation = &(rotation))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.solid_move(
										solid, 
										pinned_position, 
										pinned_rotation
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, solid_teleport, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_teleport")]
		public static void solid_teleport(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit rotation)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_rotation = &(rotation))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.solid_teleport(
										solid, 
										pinned_position, 
										pinned_rotation
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, solid_set_velocity, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_velocity")]
		public static void solid_set_velocity(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit meters_per_second)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_meters_per_second = &(meters_per_second))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.solid_set_velocity(
									solid, 
									pinned_meters_per_second
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_set_velocity_ang, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_velocity_ang")]
		public static void solid_set_velocity_ang(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit radians_per_second)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_radians_per_second = &(radians_per_second))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.solid_set_velocity_ang(
									solid, 
									pinned_radians_per_second
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_get_pose, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_get_pose")]
		public static void solid_get_pose(
					global::System.IntPtr solid, 
					out global::StereoKit.Pose__StereoKit out_pose)
		{
			// Marshalling
			fixed (global::StereoKit.Pose__StereoKit* pinned_out_pose = &(out_pose))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.solid_get_pose(
									solid, 
									pinned_out_pose
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, model_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_find")]
		public static global::System.IntPtr model_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, model_copy, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_copy")]
		public static global::System.IntPtr model_copy(global::System.IntPtr model)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_copy(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create")]
		public static global::System.IntPtr model_create()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_create();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_create_mesh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create_mesh")]
		public static global::System.IntPtr model_create_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_create_mesh(
								mesh, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_create_mem, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_UIntPtr____w64 unsigned int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create_mem")]
		public static global::System.IntPtr model_create_mem(
					byte[] filename_utf8, 
					byte[] data, 
					global::System.UIntPtr data_size, 
					global::System.IntPtr shader)
		{
			// Setup
			byte* unsafe_filename_utf8;
			byte* unsafe_data;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_filename_utf8 = ((filename_utf8 != null 
						&& filename_utf8.Length == 0) ? new byte[1] : filename_utf8))
			{
				unsafe_filename_utf8 = (byte*)pinned_filename_utf8;
				fixed (byte* pinned_data = ((data != null 
							&& data.Length == 0) ? new byte[1] : data))
				{
					unsafe_data = (byte*)pinned_data;
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.model_create_mem(
										unsafe_filename_utf8, 
										unsafe_data, 
										data_size, 
										shader
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, model_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create_file")]
		public static global::System.IntPtr model_create_file(
					byte[] filename_utf8, 
					global::System.IntPtr shader)
		{
			// Setup
			byte* unsafe_filename_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_filename_utf8 = ((filename_utf8 != null 
						&& filename_utf8.Length == 0) ? new byte[1] : filename_utf8))
			{
				unsafe_filename_utf8 = (byte*)pinned_filename_utf8;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_create_file(
									unsafe_filename_utf8, 
									shader
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, model_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_id")]
		public static void model_set_id(
					global::System.IntPtr model, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.model_set_id(
									model, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, model_addref, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_addref")]
		public static void model_addref(global::System.IntPtr model)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_addref(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_release")]
		public static void model_release(global::System.IntPtr model)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_release(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_get_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_name")]
		public static global::System.IntPtr model_get_name(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_get_name(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_get_material, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_material")]
		public static global::System.IntPtr model_get_material(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_get_material(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_get_mesh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_mesh")]
		public static global::System.IntPtr model_get_mesh(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_get_mesh(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_get_transform, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_transform")]
		public static global::StereoKit.Matrix__StereoKit model_get_transform(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_get_transform(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_set_material, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_material")]
		public static void model_set_material(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_set_material(
								model, 
								subset, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_mesh, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_mesh")]
		public static void model_set_mesh(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr mesh)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_set_mesh(
								model, 
								subset, 
								mesh
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_transform, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_transform")]
		public static void model_set_transform(
					global::System.IntPtr model, 
					int subset, 
					ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.model_set_transform(
									model, 
									subset, 
									pinned_transform
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, model_remove_subset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_remove_subset")]
		public static void model_remove_subset(
					global::System.IntPtr model, 
					int subset)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_remove_subset(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_add_subset, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_add_subset")]
		public static int model_add_subset(
					global::System.IntPtr model, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_add_subset(
									model, 
									mesh, 
									material, 
									pinned_transform
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, model_add_named_subset, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_add_named_subset")]
		public static int model_add_named_subset(
					global::System.IntPtr model, 
					string name, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.model_add_named_subset(
										model, 
										unsafe_name, 
										mesh, 
										material, 
										pinned_transform
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, model_subset_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_subset_count")]
		public static int model_subset_count(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_subset_count(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_recalculate_bounds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_recalculate_bounds")]
		public static void model_recalculate_bounds(global::System.IntPtr model)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_recalculate_bounds(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_bounds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_bounds")]
		public static void model_set_bounds(
					global::System.IntPtr model, 
					ref global::StereoKit.Bounds__StereoKit bounds)
		{
			// Marshalling
			fixed (global::StereoKit.Bounds__StereoKit* pinned_bounds = &(bounds))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.model_set_bounds(
									model, 
									pinned_bounds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, model_get_bounds, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_bounds")]
		public static global::StereoKit.Bounds__StereoKit model_get_bounds(global::System.IntPtr model)
		{
			// Setup
			global::StereoKit.Bounds__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_get_bounds(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_ray_intersect, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_ray_intersect")]
		public static int model_ray_intersect(
					global::System.IntPtr model, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					out global::StereoKit.Ray__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Ray__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_ray_intersect(
									model, 
									model_space_ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, model_step_anim, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_step_anim")]
		public static void model_step_anim(global::System.IntPtr model)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_step_anim(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_play_anim, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_AnimMode__StereoKit__AnimMode__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_play_anim")]
		public static int model_play_anim(
					global::System.IntPtr model, 
					string animation_name, 
					global::StereoKit.AnimMode__StereoKit mode)
		{
			// Setup
			byte* unsafe_animation_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_animation_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(animation_name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_play_anim(
									model, 
									unsafe_animation_name, 
									mode
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_animation_name);
			}
		}

		// Signature, model_play_anim_idx, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_AnimMode__StereoKit__AnimMode__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_play_anim_idx")]
		public static void model_play_anim_idx(
					global::System.IntPtr model, 
					int index, 
					global::StereoKit.AnimMode__StereoKit mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_play_anim_idx(
								model, 
								index, 
								mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_anim_time, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_anim_time")]
		public static void model_set_anim_time(
					global::System.IntPtr model, 
					float time)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_set_anim_time(
								model, 
								time
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_anim_completion, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_anim_completion")]
		public static void model_set_anim_completion(
					global::System.IntPtr model, 
					float percent)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_set_anim_completion(
								model, 
								percent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_anim_find, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_find")]
		public static int model_anim_find(
					global::System.IntPtr model, 
					string animation_name)
		{
			// Setup
			byte* unsafe_animation_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_animation_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(animation_name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_find(
									model, 
									unsafe_animation_name
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_animation_name);
			}
		}

		// Signature, model_anim_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_count")]
		public static int model_anim_count(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_count(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_anim_active, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_active")]
		public static int model_anim_active(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_active(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_anim_active_mode, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_AnimMode__StereoKit__AnimMode__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_active_mode")]
		public static global::StereoKit.AnimMode__StereoKit model_anim_active_mode(global::System.IntPtr model)
		{
			// Setup
			global::StereoKit.AnimMode__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_active_mode(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_anim_active_time, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_active_time")]
		public static float model_anim_active_time(global::System.IntPtr model)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_active_time(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_anim_active_completion, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_active_completion")]
		public static float model_anim_active_completion(global::System.IntPtr model)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_active_completion(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_anim_get_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_get_name")]
		public static global::System.IntPtr model_anim_get_name(
					global::System.IntPtr model, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_get_name(
								model, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_anim_get_duration, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_anim_get_duration")]
		public static float model_anim_get_duration(
					global::System.IntPtr model, 
					int index)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_anim_get_duration(
								model, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_add, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_add")]
		public static int model_node_add(
					global::System.IntPtr model, 
					string name, 
					global::StereoKit.Matrix__StereoKit model_transform, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					int solid)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_add(
									model, 
									unsafe_name, 
									model_transform, 
									mesh, 
									material, 
									solid
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, model_node_add_child, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_add_child")]
		public static int model_node_add_child(
					global::System.IntPtr model, 
					int parent, 
					string name, 
					global::StereoKit.Matrix__StereoKit local_transform, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					int solid)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_add_child(
									model, 
									parent, 
									unsafe_name, 
									local_transform, 
									mesh, 
									material, 
									solid
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, model_node_find, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_find")]
		public static int model_node_find(
					global::System.IntPtr model, 
					string name)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_find(
									model, 
									unsafe_name
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, model_node_sibling, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_sibling")]
		public static int model_node_sibling(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_sibling(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_parent, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_parent")]
		public static int model_node_parent(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_parent(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_child, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_child")]
		public static int model_node_child(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_child(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_count")]
		public static int model_node_count(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_count(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_index, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_index")]
		public static int model_node_index(
					global::System.IntPtr model, 
					int index)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_index(
								model, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_visual_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_visual_count")]
		public static int model_node_visual_count(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_visual_count(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_visual_index, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_visual_index")]
		public static int model_node_visual_index(
					global::System.IntPtr model, 
					int index)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_visual_index(
								model, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_iterate, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_iterate")]
		public static int model_node_iterate(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_iterate(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_root, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_root")]
		public static int model_node_get_root(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_root(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_name")]
		public static global::System.IntPtr model_node_get_name(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_name(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_solid, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_solid")]
		public static int model_node_get_solid(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_solid(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_visible, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_visible")]
		public static int model_node_get_visible(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_visible(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_material, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_material")]
		public static global::System.IntPtr model_node_get_material(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_material(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_mesh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_mesh")]
		public static global::System.IntPtr model_node_get_mesh(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_mesh(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_transform_model, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_transform_model")]
		public static global::StereoKit.Matrix__StereoKit model_node_get_transform_model(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_transform_model(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_get_transform_local, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_get_transform_local")]
		public static global::StereoKit.Matrix__StereoKit model_node_get_transform_local(
					global::System.IntPtr model, 
					int node)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.model_node_get_transform_local(
								model, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_node_set_name, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_name")]
		public static void model_node_set_name(
					global::System.IntPtr model, 
					int node, 
					string name)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.model_node_set_name(
									model, 
									node, 
									unsafe_name
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, model_node_set_solid, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_solid")]
		public static void model_node_set_solid(
					global::System.IntPtr model, 
					int node, 
					int solid)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_node_set_solid(
								model, 
								node, 
								solid
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_node_set_visible, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_visible")]
		public static void model_node_set_visible(
					global::System.IntPtr model, 
					int node, 
					int visible)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_node_set_visible(
								model, 
								node, 
								visible
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_node_set_material, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_material")]
		public static void model_node_set_material(
					global::System.IntPtr model, 
					int node, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_node_set_material(
								model, 
								node, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_node_set_mesh, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_mesh")]
		public static void model_node_set_mesh(
					global::System.IntPtr model, 
					int node, 
					global::System.IntPtr mesh)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_node_set_mesh(
								model, 
								node, 
								mesh
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_node_set_transform_model, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_transform_model")]
		public static void model_node_set_transform_model(
					global::System.IntPtr model, 
					int node, 
					global::StereoKit.Matrix__StereoKit transform_model_space)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_node_set_transform_model(
								model, 
								node, 
								transform_model_space
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_node_set_transform_local, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_node_set_transform_local")]
		public static void model_node_set_transform_local(
					global::System.IntPtr model, 
					int node, 
					global::StereoKit.Matrix__StereoKit transform_local_space)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.model_node_set_transform_local(
								model, 
								node, 
								transform_local_space
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sprite_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_SpriteType__StereoKit__SpriteType__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_create")]
		public static global::System.IntPtr sprite_create(
					global::System.IntPtr sprite, 
					global::StereoKit.SpriteType__StereoKit type, 
					string atlas_id)
		{
			// Setup
			byte* unsafe_atlas_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_atlas_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(atlas_id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sprite_create(
									sprite, 
									type, 
									unsafe_atlas_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_atlas_id);
			}
		}

		// Signature, sprite_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_SpriteType__StereoKit__SpriteType__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_create_file")]
		public static global::System.IntPtr sprite_create_file(
					byte[] filename_utf8, 
					global::StereoKit.SpriteType__StereoKit type, 
					string atlas_id)
		{
			// Setup
			byte* unsafe_filename_utf8;
			byte* unsafe_atlas_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				fixed (byte* pinned_filename_utf8 = ((filename_utf8 != null 
							&& filename_utf8.Length == 0) ? new byte[1] : filename_utf8))
				{
					unsafe_filename_utf8 = (byte*)pinned_filename_utf8;
					unsafe_atlas_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(atlas_id, true, false);
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.sprite_create_file(
										unsafe_filename_utf8, 
										type, 
										unsafe_atlas_id
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_atlas_id);
			}
		}

		// Signature, sprite_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_set_id")]
		public static void sprite_set_id(
					global::System.IntPtr sprite, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sprite_set_id(
									sprite, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, sprite_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_release")]
		public static void sprite_release(global::System.IntPtr sprite)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sprite_release(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sprite_get_aspect, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_aspect")]
		public static float sprite_get_aspect(global::System.IntPtr sprite)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sprite_get_aspect(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_draw, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_draw")]
		public static void sprite_draw(
					global::System.IntPtr sprite, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Color32__StereoKit color)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sprite_draw(
									sprite, 
									pinned_transform, 
									color
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sprite_draw_at, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_draw_at")]
		public static void sprite_draw_at(
					global::System.IntPtr sprite, 
					global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.Color32__StereoKit color)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sprite_draw_at(
								sprite, 
								transform, 
								position, 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sprite_get_width, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_width")]
		public static int sprite_get_width(global::System.IntPtr sprite)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sprite_get_width(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_get_height, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_height")]
		public static int sprite_get_height(global::System.IntPtr sprite)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sprite_get_height(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_get_dimensions_normalized, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_dimensions_normalized")]
		public static global::StereoKit.Vec2__StereoKit sprite_get_dimensions_normalized(global::System.IntPtr sprite)
		{
			// Setup
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sprite_get_dimensions_normalized(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, line_add, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "line_add")]
		public static void line_add(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec3__StereoKit end, 
					global::StereoKit.Color32__StereoKit color_start, 
					global::StereoKit.Color32__StereoKit color_end, 
					float thickness)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.line_add(
								start, 
								end, 
								color_start, 
								color_end, 
								thickness
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, line_add_listv, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_LinePoint__StereoKit__StereoKit__LinePoint__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "line_add_listv")]
		public static void line_add_listv(
					global::StereoKit.LinePoint__StereoKit[] points, 
					int count)
		{
			// Setup
			global::StereoKit.LinePoint__StereoKit* unsafe_points = default(global::StereoKit.LinePoint__StereoKit*);
			try
			{
				// Marshalling
				if (points == null)
					unsafe_points = null;
				else
				{
					if (points != null)
						unsafe_points = (global::StereoKit.LinePoint__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(points.Length * sizeof(global::StereoKit.LinePoint__StereoKit))));
					if (points != null)
						for (uint mcgIdx = 0; (mcgIdx < points.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_LinePoint__StereoKit__StereoKit__LinePoint__StereoKit points
							unsafe_points[mcgIdx] = points[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.line_add_listv(
									unsafe_points, 
									count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_points);
			}
		}

		// Signature, render_set_clip, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_clip")]
		public static void render_set_clip(
					float near_plane, 
					float far_plane)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_clip(
								near_plane, 
								far_plane
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_set_fov, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_fov")]
		public static void render_set_fov(float field_of_view_degrees)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_fov(field_of_view_degrees);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_set_ortho_clip, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_ortho_clip")]
		public static void render_set_ortho_clip(
					float near_plane, 
					float far_plane)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_ortho_clip(
								near_plane, 
								far_plane
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_set_ortho_size, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_ortho_size")]
		public static void render_set_ortho_size(float viewport_height_meters)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_ortho_size(viewport_height_meters);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_set_projection, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Projection__StereoKit__Projection__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_projection")]
		public static void render_set_projection(global::StereoKit.Projection__StereoKit proj)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_projection(proj);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_get_projection, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_Projection__StereoKit__Projection__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_projection")]
		public static global::StereoKit.Projection__StereoKit render_get_projection()
		{
			// Setup
			global::StereoKit.Projection__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_projection();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_get_cam_root, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_cam_root")]
		public static global::StereoKit.Matrix__StereoKit render_get_cam_root()
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_cam_root();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_set_cam_root, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_cam_root")]
		public static void render_set_cam_root(ref global::StereoKit.Matrix__StereoKit cam_root)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_cam_root = &(cam_root))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.render_set_cam_root(pinned_cam_root);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_set_skytex, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_skytex")]
		public static void render_set_skytex(global::System.IntPtr sky_texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_skytex(sky_texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_get_skytex, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_skytex")]
		public static global::System.IntPtr render_get_skytex()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_skytex();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_set_skylight, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_skylight")]
		public static void render_set_skylight(ref global::StereoKit.SphericalHarmonics__StereoKit lighting_info)
		{
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.render_set_skylight(pinned_lighting_info);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_get_filter, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_filter")]
		public static global::StereoKit.RenderLayer__StereoKit render_get_filter()
		{
			// Setup
			global::StereoKit.RenderLayer__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_filter();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_set_filter, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_filter")]
		public static void render_set_filter(global::StereoKit.RenderLayer__StereoKit layer_filter)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_filter(layer_filter);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_override_capture_filter, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_override_capture_filter")]
		public static void render_override_capture_filter(
					int use_override_filter, 
					global::StereoKit.RenderLayer__StereoKit layer_filter)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_override_capture_filter(
								use_override_filter, 
								layer_filter
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_get_capture_filter, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_capture_filter")]
		public static global::StereoKit.RenderLayer__StereoKit render_get_capture_filter()
		{
			// Setup
			global::StereoKit.RenderLayer__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_capture_filter();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_has_capture_filter, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_has_capture_filter")]
		public static int render_has_capture_filter()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_has_capture_filter();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_get_skylight, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_skylight")]
		public static global::StereoKit.SphericalHarmonics__StereoKit render_get_skylight()
		{
			// Setup
			global::StereoKit.SphericalHarmonics__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_skylight();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_set_clear_color, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_clear_color")]
		public static void render_set_clear_color(global::StereoKit.Color__StereoKit color)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_set_clear_color(color);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_get_clear_color, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_clear_color")]
		public static global::StereoKit.Color__StereoKit render_get_clear_color()
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_get_clear_color();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_enable_skytex, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_enable_skytex")]
		public static void render_enable_skytex(bool show_sky)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_enable_skytex((show_sky ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_enabled_skytex, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_enabled_skytex")]
		public static bool render_enabled_skytex()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.render_enabled_skytex();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, render_add_mesh, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_add_mesh")]
		public static void render_add_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Color__StereoKit color, 
					global::StereoKit.RenderLayer__StereoKit layer)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.render_add_mesh(
									mesh, 
									material, 
									pinned_transform, 
									color, 
									layer
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_add_model, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_add_model")]
		public static void render_add_model(
					global::System.IntPtr model, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Color__StereoKit color, 
					global::StereoKit.RenderLayer__StereoKit layer)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.render_add_model(
									model, 
									pinned_transform, 
									color, 
									layer
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_blit, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_blit")]
		public static void render_blit(
					global::System.IntPtr to_rendertarget, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.render_blit(
								to_rendertarget, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_screenshot, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_screenshot")]
		public static void render_screenshot(
					string file, 
					global::StereoKit.Vec3__StereoKit from_viewpt, 
					global::StereoKit.Vec3__StereoKit at, 
					int width, 
					int height, 
					float fov_degrees)
		{
			// Setup
			byte* unsafe_file = default(byte*);
			try
			{
				// Marshalling
				unsafe_file = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(file, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.render_screenshot(
									unsafe_file, 
									from_viewpt, 
									at, 
									width, 
									height, 
									fov_degrees
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_file);
			}
		}

		// Signature, render_to, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_RenderLayer__StereoKit__RenderLayer__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_RenderClear__StereoKit__RenderClear__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Rect__StereoKit__StereoKit__Rect__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_to")]
		public static void render_to(
					global::System.IntPtr to_rendertarget, 
					ref global::StereoKit.Matrix__StereoKit camera, 
					ref global::StereoKit.Matrix__StereoKit projection, 
					global::StereoKit.RenderLayer__StereoKit layer_filter, 
					global::StereoKit.RenderClear__StereoKit clear, 
					global::StereoKit.Rect__StereoKit viewport)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_camera = &(camera))
				fixed (global::StereoKit.Matrix__StereoKit* pinned_projection = &(projection))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.render_to(
										to_rendertarget, 
										pinned_camera, 
										pinned_projection, 
										layer_filter, 
										clear, 
										viewport
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, hierarchy_push, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_push")]
		public static void hierarchy_push(ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.hierarchy_push(pinned_transform);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, hierarchy_pop, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_pop")]
		public static void hierarchy_pop()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.hierarchy_pop();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, hierarchy_set_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_set_enabled")]
		public static void hierarchy_set_enabled(bool enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.hierarchy_set_enabled((enabled ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, hierarchy_is_enabled, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_is_enabled")]
		public static bool hierarchy_is_enabled()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_is_enabled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, hierarchy_to_local_point, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_point")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_local_point(ref global::StereoKit.Vec3__StereoKit world_pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_world_pt = &(world_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_local_point(pinned_world_pt);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_local_direction, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_direction")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_local_direction(ref global::StereoKit.Vec3__StereoKit world_dir)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_world_dir = &(world_dir))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_local_direction(pinned_world_dir);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_local_rotation, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_rotation")]
		public static global::StereoKit.Quat__StereoKit hierarchy_to_local_rotation(ref global::StereoKit.Quat__StereoKit world_orientation)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_world_orientation = &(world_orientation))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_local_rotation(pinned_world_orientation);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_local_pose, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_pose")]
		public static global::StereoKit.Pose__StereoKit hierarchy_to_local_pose(ref global::StereoKit.Pose__StereoKit world_pose)
		{
			// Setup
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Pose__StereoKit* pinned_world_pose = &(world_pose))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_local_pose(pinned_world_pose);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_point, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_point")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_world_point(ref global::StereoKit.Vec3__StereoKit local_pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_local_pt = &(local_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_world_point(pinned_local_pt);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_direction, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_direction")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_world_direction(ref global::StereoKit.Vec3__StereoKit local_dir)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_local_dir = &(local_dir))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_world_direction(pinned_local_dir);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_rotation, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_rotation")]
		public static global::StereoKit.Quat__StereoKit hierarchy_to_world_rotation(ref global::StereoKit.Quat__StereoKit local_orientation)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_local_orientation = &(local_orientation))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_world_rotation(pinned_local_orientation);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_pose, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_pose")]
		public static global::StereoKit.Pose__StereoKit hierarchy_to_world_pose(ref global::StereoKit.Pose__StereoKit local_pose)
		{
			// Setup
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Pose__StereoKit* pinned_local_pose = &(local_pose))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.hierarchy_to_world_pose(pinned_local_pose);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sound_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_find")]
		public static global::System.IntPtr sound_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, sound_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_set_id")]
		public static void sound_set_id(
					global::System.IntPtr sound, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sound_set_id(
									sound, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, sound_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_create")]
		public static global::System.IntPtr sound_create(byte[] filename_utf8)
		{
			// Setup
			byte* unsafe_filename_utf8;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_filename_utf8 = ((filename_utf8 != null 
						&& filename_utf8.Length == 0) ? new byte[1] : filename_utf8))
			{
				unsafe_filename_utf8 = (byte*)pinned_filename_utf8;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_create(unsafe_filename_utf8);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sound_create_stream, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_create_stream")]
		public static global::System.IntPtr sound_create_stream(float buffer_duration)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_create_stream(buffer_duration);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_create_samples, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_float__float *, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_create_samples")]
		public static global::System.IntPtr sound_create_samples(
					float[] samples_at_48000s, 
					ulong sample_count)
		{
			// Setup
			float* unsafe_samples_at_48000s;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (float* pinned_samples_at_48000s = ((samples_at_48000s != null 
						&& samples_at_48000s.Length == 0) ? new float[1] : samples_at_48000s))
			{
				unsafe_samples_at_48000s = (float*)pinned_samples_at_48000s;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_create_samples(
									unsafe_samples_at_48000s, 
									sample_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sound_generate, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_AudioGenerator__StereoKit__StereoKit__AudioGenerator__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_generate")]
		public static global::System.IntPtr sound_generate(
					global::StereoKit.AudioGenerator__StereoKit function, 
					float duration)
		{
			// Setup
			void* unsafe_function = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_function = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.AudioGenerator,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									function
								);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_generate(
									unsafe_function, 
									duration
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(function);
			}
		}

		// Signature, sound_write_samples, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_float__float *, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_write_samples")]
		public static void sound_write_samples(
					global::System.IntPtr sound, 
					float[] samples, 
					ulong sample_count)
		{
			// Setup
			float* unsafe_samples;
			// Marshalling
			fixed (float* pinned_samples = ((samples != null 
						&& samples.Length == 0) ? new float[1] : samples))
			{
				unsafe_samples = (float*)pinned_samples;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.sound_write_samples(
									sound, 
									unsafe_samples, 
									sample_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sound_read_samples, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [EETypeRva:0x00042A40] rg_float__float *, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_read_samples")]
		public static ulong sound_read_samples(
					global::System.IntPtr sound, 
					float[] out_samples, 
					ulong sample_count)
		{
			// Setup
			float* unsafe_out_samples;
			ulong unsafe___value;
			// Marshalling
			fixed (float* pinned_out_samples = ((out_samples != null 
						&& out_samples.Length == 0) ? new float[1] : out_samples))
			{
				unsafe_out_samples = (float*)pinned_out_samples;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_read_samples(
									sound, 
									unsafe_out_samples, 
									sample_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sound_unread_samples, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_unread_samples")]
		public static ulong sound_unread_samples(global::System.IntPtr sound)
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_unread_samples(sound);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_total_samples, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_total_samples")]
		public static ulong sound_total_samples(global::System.IntPtr sound)
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_total_samples(sound);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_cursor_samples, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_cursor_samples")]
		public static ulong sound_cursor_samples(global::System.IntPtr sound)
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_cursor_samples(sound);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_play, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_play")]
		public static global::StereoKit.SoundInst__StereoKit sound_play(
					global::System.IntPtr sound, 
					global::StereoKit.Vec3__StereoKit at, 
					float volume)
		{
			// Setup
			global::StereoKit.SoundInst__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_play(
								sound, 
								at, 
								volume
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_duration, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_duration")]
		public static float sound_duration(global::System.IntPtr sound)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_duration(sound);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_release")]
		public static void sound_release(global::System.IntPtr sound)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sound_release(sound);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sound_inst_stop, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_inst_stop")]
		public static void sound_inst_stop(global::StereoKit.SoundInst__StereoKit sound_inst)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sound_inst_stop(sound_inst);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sound_inst_is_playing, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_inst_is_playing")]
		public static bool sound_inst_is_playing(global::StereoKit.SoundInst__StereoKit sound_inst)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_inst_is_playing(sound_inst);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, sound_inst_set_pos, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_inst_set_pos")]
		public static void sound_inst_set_pos(
					global::StereoKit.SoundInst__StereoKit sound_inst, 
					global::StereoKit.Vec3__StereoKit pos)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sound_inst_set_pos(
								sound_inst, 
								pos
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sound_inst_get_pos, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_inst_get_pos")]
		public static global::StereoKit.Vec3__StereoKit sound_inst_get_pos(global::StereoKit.SoundInst__StereoKit sound_inst)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_inst_get_pos(sound_inst);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sound_inst_set_volume, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_inst_set_volume")]
		public static void sound_inst_set_volume(
					global::StereoKit.SoundInst__StereoKit sound_inst, 
					float volume)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.sound_inst_set_volume(
								sound_inst, 
								volume
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sound_inst_get_volume, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_SoundInst__StereoKit__StereoKit__SoundInst__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_inst_get_volume")]
		public static float sound_inst_get_volume(global::StereoKit.SoundInst__StereoKit sound_inst)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.sound_inst_get_volume(sound_inst);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mic_device_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mic_device_count")]
		public static int mic_device_count()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mic_device_count();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mic_device_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mic_device_name")]
		public static global::System.IntPtr mic_device_name(int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mic_device_name(index);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mic_start, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mic_start")]
		public static bool mic_start(string device_name)
		{
			// Setup
			byte* unsafe_device_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_device_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(device_name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.mic_start(unsafe_device_name);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_device_name);
			}
		}

		// Signature, mic_stop, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mic_stop")]
		public static void mic_stop()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.mic_stop();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mic_get_stream, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mic_get_stream")]
		public static global::System.IntPtr mic_get_stream()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mic_get_stream();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mic_is_recording, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mic_is_recording")]
		public static bool mic_is_recording()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.mic_is_recording();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, platform_file_picker_sz, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_PickerMode__StereoKit__PickerMode__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_PickerCallback__StereoKit__StereoKit__PickerCallback__StereoKit, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_FileFilter__StereoKit__StereoKit__FileFilter__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_file_picker_sz")]
		public static void platform_file_picker_sz(
					global::StereoKit.PickerMode__StereoKit mode, 
					global::System.IntPtr callback_data, 
					global::StereoKit.PickerCallback__StereoKit on_callback, 
					global::StereoKit.FileFilter__StereoKit[] filters, 
					int filter_count)
		{
			// Setup
			void* unsafe_on_callback = default(void*);
			global::StereoKit.FileFilter__StereoKit__Impl.UnsafeType* unsafe_filters = default(global::StereoKit.FileFilter__StereoKit__Impl.UnsafeType*);
			try
			{
				// Marshalling
				unsafe_on_callback = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.PickerCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									on_callback
								);
				if (filters == null)
					unsafe_filters = null;
				else
				{
					if (filters != null)
						unsafe_filters = (global::StereoKit.FileFilter__StereoKit__Impl.UnsafeType*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(filters.Length * sizeof(global::StereoKit.FileFilter__StereoKit__Impl.UnsafeType))));
					if (filters != null)
						for (uint mcgIdx = 0; (mcgIdx < filters.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x000421C0] StereoKit_FileFilter__StereoKit__StereoKit__FileFilter__StereoKit filters
							global::StereoKit.FileFilter__StereoKit__Impl.Marshal__SafeToUnsafe(
												ref filters[mcgIdx], 
												out unsafe_filters[mcgIdx]
											);
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.platform_file_picker_sz(
									mode, 
									callback_data, 
									unsafe_on_callback, 
									unsafe_filters, 
									filter_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_callback);
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filters);
			}
		}

		// Signature, platform_file_picker_close, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_file_picker_close")]
		public static void platform_file_picker_close()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.platform_file_picker_close();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, platform_file_picker_visible, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_file_picker_visible")]
		public static bool platform_file_picker_visible()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.platform_file_picker_visible();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, platform_read_file, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_read_file")]
		public static bool platform_read_file(
					byte[] name_utf8, 
					out global::System.IntPtr out_data, 
					out global::System.UIntPtr out_size)
		{
			// Setup
			byte* unsafe_name_utf8;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_name_utf8 = ((name_utf8 != null 
						&& name_utf8.Length == 0) ? new byte[1] : name_utf8))
			{
				unsafe_name_utf8 = (byte*)pinned_name_utf8;
				fixed (global::System.IntPtr* pinned_out_data = &(out_data))
					fixed (global::System.UIntPtr* pinned_out_size = &(out_size))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_PInvokes.platform_read_file(
											unsafe_name_utf8, 
											pinned_out_data, 
											pinned_out_size
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, platform_write_file, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_write_file")]
		public static bool platform_write_file(
					byte[] name_utf8, 
					byte[] data, 
					global::System.UIntPtr size)
		{
			// Setup
			byte* unsafe_name_utf8;
			byte* unsafe_data;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_name_utf8 = ((name_utf8 != null 
						&& name_utf8.Length == 0) ? new byte[1] : name_utf8))
			{
				unsafe_name_utf8 = (byte*)pinned_name_utf8;
				fixed (byte* pinned_data = ((data != null 
							&& data.Length == 0) ? new byte[1] : data))
				{
					unsafe_data = (byte*)pinned_data;
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.platform_write_file(
										unsafe_name_utf8, 
										unsafe_data, 
										size
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, platform_keyboard_get_force_fallback, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_keyboard_get_force_fallback")]
		public static int platform_keyboard_get_force_fallback()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.platform_keyboard_get_force_fallback();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, platform_keyboard_set_force_fallback, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_keyboard_set_force_fallback")]
		public static void platform_keyboard_set_force_fallback(int force_fallback)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.platform_keyboard_set_force_fallback(force_fallback);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, platform_keyboard_visible, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_keyboard_visible")]
		public static int platform_keyboard_visible()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.platform_keyboard_visible();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, platform_keyboard_show, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextContext__StereoKit__TextContext__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "platform_keyboard_show")]
		public static void platform_keyboard_show(
					int show, 
					global::StereoKit.TextContext__StereoKit inputType)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.platform_keyboard_show(
								show, 
								inputType
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_pointer_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_pointer_count")]
		public static int input_pointer_count(global::StereoKit.InputSource__StereoKit filter)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_pointer_count(filter);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_pointer, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pointer__StereoKit__StereoKit__Pointer__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_pointer")]
		public static global::StereoKit.Pointer__StereoKit input_pointer(
					int index, 
					global::StereoKit.InputSource__StereoKit filter)
		{
			// Setup
			global::StereoKit.Pointer__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_pointer(
								index, 
								filter
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_hand, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand")]
		public static global::System.IntPtr input_hand(global::StereoKit.Handed__StereoKit hand)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_hand(hand);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_controller, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_controller")]
		public static global::System.IntPtr input_controller(global::StereoKit.Handed__StereoKit hand)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_controller(hand);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_controller_menu, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_controller_menu")]
		public static global::StereoKit.BtnState__StereoKit input_controller_menu()
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_controller_menu();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_hand_override, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_HandJoint__StereoKit__StereoKit__HandJoint__StereoKit *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_override")]
		public static void input_hand_override(
					global::StereoKit.Handed__StereoKit hand, 
					global::StereoKit.HandJoint__StereoKit[] hand_joints)
		{
			// Setup
			global::StereoKit.HandJoint__StereoKit* unsafe_hand_joints = default(global::StereoKit.HandJoint__StereoKit*);
			try
			{
				// Marshalling
				if (hand_joints == null)
					unsafe_hand_joints = null;
				else
				{
					if (hand_joints != null)
						unsafe_hand_joints = (global::StereoKit.HandJoint__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(hand_joints.Length * sizeof(global::StereoKit.HandJoint__StereoKit))));
					if (hand_joints != null)
						for (uint mcgIdx = 0; (mcgIdx < hand_joints.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_HandJoint__StereoKit__StereoKit__HandJoint__StereoKit hand_joints
							unsafe_hand_joints[mcgIdx] = hand_joints[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.input_hand_override(
									hand, 
									unsafe_hand_joints
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_hand_joints);
			}
		}

		// Signature, input_hand_override__0, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_override")]
		public static void input_hand_override__0(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr hand_joints)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.input_hand_override__0(
								hand, 
								hand_joints
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_mouse, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_mouse")]
		public static global::System.IntPtr input_mouse()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_mouse();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_head, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_head")]
		public static global::System.IntPtr input_head()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_head();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_eyes, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_eyes")]
		public static global::System.IntPtr input_eyes()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_eyes();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_eyes_tracked, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_eyes_tracked")]
		public static global::StereoKit.BtnState__StereoKit input_eyes_tracked()
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_eyes_tracked();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_key, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Key__StereoKit__Key__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_key")]
		public static global::StereoKit.BtnState__StereoKit input_key(global::StereoKit.Key__StereoKit key)
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_key(key);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_text_consume, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_text_consume")]
		public static uint input_text_consume()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.input_text_consume();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_text_reset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_text_reset")]
		public static void input_text_reset()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.input_text_reset();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_hand_visible, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_visible")]
		public static void input_hand_visible(
					global::StereoKit.Handed__StereoKit hand, 
					bool visible)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.input_hand_visible(
								hand, 
								(visible ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_hand_solid, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_solid")]
		public static void input_hand_solid(
					global::StereoKit.Handed__StereoKit hand, 
					bool solid)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.input_hand_solid(
								hand, 
								(solid ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_hand_material, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_material")]
		public static void input_hand_material(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.input_hand_material(
								hand, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_has_bounds, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_has_bounds")]
		public static bool world_has_bounds()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_has_bounds();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, world_get_bounds_size, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_bounds_size")]
		public static global::StereoKit.Vec2__StereoKit world_get_bounds_size()
		{
			// Setup
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_bounds_size();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, world_get_bounds_pose, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_bounds_pose")]
		public static global::StereoKit.Pose__StereoKit world_get_bounds_pose()
		{
			// Setup
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_bounds_pose();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, world_from_spatial_graph, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] long____int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_from_spatial_graph")]
		public static global::StereoKit.Pose__StereoKit world_from_spatial_graph(
					byte[] spatial_graph_node_id, 
					int dynamic, 
					long time)
		{
			// Setup
			byte* unsafe_spatial_graph_node_id;
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			fixed (byte* pinned_spatial_graph_node_id = ((spatial_graph_node_id != null 
						&& spatial_graph_node_id.Length == 0) ? new byte[1] : spatial_graph_node_id))
			{
				unsafe_spatial_graph_node_id = (byte*)pinned_spatial_graph_node_id;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.world_from_spatial_graph(
									unsafe_spatial_graph_node_id, 
									dynamic, 
									time
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, world_from_perception_anchor, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_from_perception_anchor")]
		public static global::StereoKit.Pose__StereoKit world_from_perception_anchor(global::System.IntPtr perception_spatial_anchor)
		{
			// Setup
			global::StereoKit.Pose__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_from_perception_anchor(perception_spatial_anchor);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, world_try_from_spatial_graph, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] long____int64, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_try_from_spatial_graph")]
		public static int world_try_from_spatial_graph(
					byte[] spatial_graph_node_id, 
					int dynamic, 
					long time, 
					out global::StereoKit.Pose__StereoKit out_pose)
		{
			// Setup
			byte* unsafe_spatial_graph_node_id;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_spatial_graph_node_id = ((spatial_graph_node_id != null 
						&& spatial_graph_node_id.Length == 0) ? new byte[1] : spatial_graph_node_id))
			{
				unsafe_spatial_graph_node_id = (byte*)pinned_spatial_graph_node_id;
				fixed (global::StereoKit.Pose__StereoKit* pinned_out_pose = &(out_pose))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.world_try_from_spatial_graph(
										unsafe_spatial_graph_node_id, 
										dynamic, 
										time, 
										pinned_out_pose
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, world_try_from_perception_anchor, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_try_from_perception_anchor")]
		public static int world_try_from_perception_anchor(
					global::System.IntPtr perception_spatial_anchor, 
					out global::StereoKit.Pose__StereoKit out_pose)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Pose__StereoKit* pinned_out_pose = &(out_pose))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.world_try_from_perception_anchor(
									perception_spatial_anchor, 
									pinned_out_pose
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, world_raycast, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_raycast")]
		public static bool world_raycast(
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Ray__StereoKit out_intersection)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Ray__StereoKit* pinned_out_intersection = &(out_intersection))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.world_raycast(
									ray, 
									pinned_out_intersection
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, world_set_occlusion_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_set_occlusion_enabled")]
		public static void world_set_occlusion_enabled(bool enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.world_set_occlusion_enabled((enabled ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_get_occlusion_enabled, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_occlusion_enabled")]
		public static bool world_get_occlusion_enabled()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_occlusion_enabled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, world_set_raycast_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_set_raycast_enabled")]
		public static void world_set_raycast_enabled(bool enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.world_set_raycast_enabled((enabled ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_get_raycast_enabled, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_raycast_enabled")]
		public static bool world_get_raycast_enabled()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_raycast_enabled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, world_set_occlusion_material, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_set_occlusion_material")]
		public static void world_set_occlusion_material(global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.world_set_occlusion_material(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_get_occlusion_material, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_occlusion_material")]
		public static global::System.IntPtr world_get_occlusion_material()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_occlusion_material();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, world_set_refresh_type, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_WorldRefresh__StereoKit__WorldRefresh__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_set_refresh_type")]
		public static void world_set_refresh_type(global::StereoKit.WorldRefresh__StereoKit refresh_type)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.world_set_refresh_type(refresh_type);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_get_refresh_type, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_WorldRefresh__StereoKit__WorldRefresh__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_refresh_type")]
		public static global::StereoKit.WorldRefresh__StereoKit world_get_refresh_type()
		{
			// Setup
			global::StereoKit.WorldRefresh__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_refresh_type();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, world_set_refresh_radius, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_set_refresh_radius")]
		public static void world_set_refresh_radius(float radius_meters)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.world_set_refresh_radius(radius_meters);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_get_refresh_radius, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_refresh_radius")]
		public static float world_get_refresh_radius()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_refresh_radius();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, world_set_refresh_interval, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_set_refresh_interval")]
		public static void world_set_refresh_interval(float every_seconds)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.world_set_refresh_interval(every_seconds);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, world_get_refresh_interval, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "world_get_refresh_interval")]
		public static float world_get_refresh_interval()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.world_get_refresh_interval();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_subscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_InputEventCallback__StereoKit__StereoKit__InputEventCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_subscribe")]
		public static void input_subscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::StereoKit.InputEventCallback__StereoKit event_callback)
		{
			// Setup
			void* unsafe_event_callback = default(void*);
			try
			{
				// Marshalling
				unsafe_event_callback = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.InputEventCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									event_callback
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.input_subscribe(
									source, 
									evt, 
									unsafe_event_callback
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(event_callback);
			}
		}

		// Signature, input_unsubscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_InputEventCallback__StereoKit__StereoKit__InputEventCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_unsubscribe")]
		public static void input_unsubscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::StereoKit.InputEventCallback__StereoKit event_callback)
		{
			// Setup
			void* unsafe_event_callback = default(void*);
			try
			{
				// Marshalling
				unsafe_event_callback = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.InputEventCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									event_callback
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.input_unsubscribe(
									source, 
									evt, 
									unsafe_event_callback
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(event_callback);
			}
		}

		// Signature, input_fire_event, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_fire_event")]
		public static void input_fire_event(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::System.IntPtr pointer)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.input_fire_event(
								source, 
								evt, 
								pointer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, backend_xr_get_type, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BackendXRType__StereoKit__BackendXRType__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_xr_get_type")]
		public static global::StereoKit.BackendXRType__StereoKit backend_xr_get_type()
		{
			// Setup
			global::StereoKit.BackendXRType__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_xr_get_type();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_openxr_get_instance, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_get_instance")]
		public static ulong backend_openxr_get_instance()
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_get_instance();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_openxr_get_session, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_get_session")]
		public static ulong backend_openxr_get_session()
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_get_session();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_openxr_get_space, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_get_space")]
		public static ulong backend_openxr_get_space()
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_get_space();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_openxr_get_time, [fwd] [return] [EETypeRva:0x000419B0] long____int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_get_time")]
		public static long backend_openxr_get_time()
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_get_time();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_openxr_get_eyes_sample_time, [fwd] [return] [EETypeRva:0x000419B0] long____int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_get_eyes_sample_time")]
		public static long backend_openxr_get_eyes_sample_time()
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_get_eyes_sample_time();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_openxr_get_function, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_get_function")]
		public static global::System.IntPtr backend_openxr_get_function(string function_name)
		{
			// Setup
			byte* unsafe_function_name = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_function_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(function_name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_get_function(unsafe_function_name);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_function_name);
			}
		}

		// Signature, backend_openxr_ext_enabled, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_ext_enabled")]
		public static int backend_openxr_ext_enabled(string extension_name)
		{
			// Setup
			byte* unsafe_extension_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_extension_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(extension_name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_openxr_ext_enabled(unsafe_extension_name);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_extension_name);
			}
		}

		// Signature, backend_openxr_ext_request, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_ext_request")]
		public static void backend_openxr_ext_request(string extension_name)
		{
			// Setup
			byte* unsafe_extension_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_extension_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(extension_name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.backend_openxr_ext_request(unsafe_extension_name);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_extension_name);
			}
		}

		// Signature, backend_openxr_composition_layer, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_openxr_composition_layer")]
		public static void backend_openxr_composition_layer(
					global::System.IntPtr XrCompositionLayerBaseHeader, 
					int layer_size, 
					int sort_order)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.backend_openxr_composition_layer(
								XrCompositionLayerBaseHeader, 
								layer_size, 
								sort_order
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, backend_platform_get, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BackendPlatform__StereoKit__BackendPlatform__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_platform_get")]
		public static global::StereoKit.BackendPlatform__StereoKit backend_platform_get()
		{
			// Setup
			global::StereoKit.BackendPlatform__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_platform_get();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_android_get_java_vm, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_android_get_java_vm")]
		public static global::System.IntPtr backend_android_get_java_vm()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_android_get_java_vm();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_android_get_activity, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_android_get_activity")]
		public static global::System.IntPtr backend_android_get_activity()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_android_get_activity();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_android_get_jni_env, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_android_get_jni_env")]
		public static global::System.IntPtr backend_android_get_jni_env()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_android_get_jni_env();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_graphics_get, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BackendGraphics__StereoKit__BackendGraphics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_graphics_get")]
		public static global::StereoKit.BackendGraphics__StereoKit backend_graphics_get()
		{
			// Setup
			global::StereoKit.BackendGraphics__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_graphics_get();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_d3d11_get_d3d_device, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_d3d11_get_d3d_device")]
		public static global::System.IntPtr backend_d3d11_get_d3d_device()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_d3d11_get_d3d_device();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, backend_d3d11_get_d3d_context, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "backend_d3d11_get_d3d_context")]
		public static global::System.IntPtr backend_d3d11_get_d3d_context()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.backend_d3d11_get_d3d_context();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, log_write, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_LogLevel__StereoKit__LogLevel__StereoKit, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_write")]
		public static void log_write(
					global::StereoKit.LogLevel__StereoKit level, 
					string text)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.log_write(
									level, 
									unsafe_text
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, log_set_filter, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_LogLevel__StereoKit__LogLevel__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_set_filter")]
		public static void log_set_filter(global::StereoKit.LogLevel__StereoKit level)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.log_set_filter(level);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, log_subscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_LogCallback__StereoKit__StereoKit__LogCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_subscribe")]
		public static void log_subscribe(global::StereoKit.LogCallback__StereoKit on_log)
		{
			// Setup
			void* unsafe_on_log = default(void*);
			try
			{
				// Marshalling
				unsafe_on_log = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.LogCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									on_log
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.log_subscribe(unsafe_on_log);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_log);
			}
		}

		// Signature, log_unsubscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_LogCallback__StereoKit__StereoKit__LogCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_unsubscribe")]
		public static void log_unsubscribe(global::StereoKit.LogCallback__StereoKit on_log)
		{
			// Setup
			void* unsafe_on_log = default(void*);
			try
			{
				// Marshalling
				unsafe_on_log = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.LogCallback,StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null"), 
									on_log
								);
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.log_unsubscribe(unsafe_on_log);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_log);
			}
		}

		// Signature, assets_releaseref_threadsafe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "assets_releaseref_threadsafe")]
		public static void assets_releaseref_threadsafe(global::System.IntPtr asset)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.assets_releaseref_threadsafe(asset);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, assets_current_task, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "assets_current_task")]
		public static int assets_current_task()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.assets_current_task();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, assets_total_tasks, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "assets_total_tasks")]
		public static int assets_total_tasks()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.assets_total_tasks();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, assets_current_task_priority, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "assets_current_task_priority")]
		public static int assets_current_task_priority()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.assets_current_task_priority();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, assets_block_for_priority, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "assets_block_for_priority")]
		public static void assets_block_for_priority(int priority)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.assets_block_for_priority(priority);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_quadrant_size_verts, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [out] [EETypeRva:0x000424E8] rg_StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_quadrant_size_verts")]
		public static void ui_quadrant_size_verts(
					global::StereoKit.Vertex__StereoKit[] ref_vertices, 
					int vertex_count, 
					float overflow)
		{
			// Setup
			global::StereoKit.Vertex__StereoKit* unsafe_ref_vertices = default(global::StereoKit.Vertex__StereoKit*);
			try
			{
				// Marshalling
				if (ref_vertices == null)
					unsafe_ref_vertices = null;
				else
				{
					if (ref_vertices != null)
						unsafe_ref_vertices = (global::StereoKit.Vertex__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(ref_vertices.Length * sizeof(global::StereoKit.Vertex__StereoKit))));
					if (ref_vertices != null)
						for (uint mcgIdx = 0; (mcgIdx < ref_vertices.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit ref_vertices
							unsafe_ref_vertices[mcgIdx] = ref_vertices[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.ui_quadrant_size_verts(
									unsafe_ref_vertices, 
									vertex_count, 
									overflow
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (ref_vertices != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < ref_vertices.Length); mcgIdx_1++)
					{
						// [fwd] [optional] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit ref_vertices
						ref_vertices[mcgIdx_1] = unsafe_ref_vertices[mcgIdx_1];
					}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_ref_vertices);
			}
		}

		// Signature, ui_quadrant_size_mesh, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_quadrant_size_mesh")]
		public static void ui_quadrant_size_mesh(
					global::System.IntPtr ref_mesh, 
					float overflow)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_quadrant_size_mesh(
								ref_mesh, 
								overflow
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_show_volumes, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_show_volumes")]
		public static void ui_show_volumes(bool show)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_show_volumes((show ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_enable_far_interact, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_enable_far_interact")]
		public static void ui_enable_far_interact(bool enable)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_enable_far_interact((enable ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_far_interact_enabled, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_far_interact_enabled")]
		public static bool ui_far_interact_enabled()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_far_interact_enabled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_settings, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_UISettings__StereoKit__StereoKit__UISettings__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_settings")]
		public static void ui_settings(global::StereoKit.UISettings__StereoKit settings)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_settings(settings);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_set_color, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_set_color")]
		public static void ui_set_color(global::StereoKit.Color__StereoKit color)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_set_color(color);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_set_theme_color, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIColor__StereoKit__UIColor__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_set_theme_color")]
		public static void ui_set_theme_color(
					global::StereoKit.UIColor__StereoKit color_type, 
					global::StereoKit.Color__StereoKit color_gamma)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_set_theme_color(
								color_type, 
								color_gamma
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_get_theme_color, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIColor__StereoKit__UIColor__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_get_theme_color")]
		public static global::StereoKit.Color__StereoKit ui_get_theme_color(global::StereoKit.UIColor__StereoKit color_type)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_get_theme_color(color_type);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_set_element_visual, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIVisual__StereoKit__UIVisual__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_set_element_visual")]
		public static void ui_set_element_visual(
					global::StereoKit.UIVisual__StereoKit element_visual, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Vec2__StereoKit min_size)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_set_element_visual(
								element_visual, 
								mesh, 
								material, 
								min_size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_text_style, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_text_style")]
		public static void ui_push_text_style(global::StereoKit.TextStyle__StereoKit style)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_push_text_style(style);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_pop_text_style, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_text_style")]
		public static void ui_pop_text_style()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_pop_text_style();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_tint, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_tint")]
		public static void ui_push_tint(global::StereoKit.Color__StereoKit tint_gamma)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_push_tint(tint_gamma);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_pop_tint, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_tint")]
		public static void ui_pop_tint()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_pop_tint();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_enabled")]
		public static void ui_push_enabled(int enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_push_enabled(enabled);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_pop_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_enabled")]
		public static void ui_pop_enabled()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_pop_enabled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_preserve_keyboard, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_preserve_keyboard")]
		public static void ui_push_preserve_keyboard(int preserve_keyboard)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_push_preserve_keyboard(preserve_keyboard);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_pop_preserve_keyboard, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_preserve_keyboard")]
		public static void ui_pop_preserve_keyboard()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_pop_preserve_keyboard();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_surface, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_surface")]
		public static void ui_push_surface(
					global::StereoKit.Pose__StereoKit surface_pose, 
					global::StereoKit.Vec3__StereoKit layout_start, 
					global::StereoKit.Vec2__StereoKit layout_dimensions)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_push_surface(
								surface_pose, 
								layout_start, 
								layout_dimensions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_pop_surface, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_surface")]
		public static void ui_pop_surface()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_pop_surface();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_id_16, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_id_16")]
		public static ulong ui_push_id_16(string id)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			ulong unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_push_id_16(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_push_idi, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_idi")]
		public static ulong ui_push_idi(int id)
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_push_idi(id);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_pop_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_id")]
		public static void ui_pop_id()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_pop_id();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_stack_hash_16, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_stack_hash_16")]
		public static ulong ui_stack_hash_16(string str)
		{
			// Setup
			ushort* unsafe_str = default(ushort*);
			ulong unsafe___value;
			// Marshalling
			fixed (char* pinned_str = str)
			{
				unsafe_str = (ushort*)pinned_str;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_stack_hash_16(unsafe_str);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_layout_area, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_layout_area")]
		public static void ui_layout_area(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec2__StereoKit dimensions)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_layout_area(
								start, 
								dimensions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_layout_remaining, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_layout_remaining")]
		public static global::StereoKit.Vec2__StereoKit ui_layout_remaining()
		{
			// Setup
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_layout_remaining();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_layout_at, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_layout_at")]
		public static global::StereoKit.Vec3__StereoKit ui_layout_at()
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_layout_at();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_layout_last, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_layout_last")]
		public static global::StereoKit.Bounds__StereoKit ui_layout_last()
		{
			// Setup
			global::StereoKit.Bounds__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_layout_last();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_layout_reserve, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_layout_reserve")]
		public static global::StereoKit.Bounds__StereoKit ui_layout_reserve(
					global::StereoKit.Vec2__StereoKit size, 
					int add_padding, 
					float depth)
		{
			// Setup
			global::StereoKit.Bounds__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_layout_reserve(
								size, 
								add_padding, 
								depth
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_last_element_hand_used, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_last_element_hand_used")]
		public static global::StereoKit.BtnState__StereoKit ui_last_element_hand_used(global::StereoKit.Handed__StereoKit hand)
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_last_element_hand_used(hand);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_last_element_active, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_last_element_active")]
		public static global::StereoKit.BtnState__StereoKit ui_last_element_active()
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_last_element_active();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_last_element_focused, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_last_element_focused")]
		public static global::StereoKit.BtnState__StereoKit ui_last_element_focused()
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_last_element_focused();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_area_remaining, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_area_remaining")]
		public static global::StereoKit.Vec2__StereoKit ui_area_remaining()
		{
			// Setup
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_area_remaining();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_nextline, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_nextline")]
		public static void ui_nextline()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_nextline();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_sameline, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_sameline")]
		public static void ui_sameline()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_sameline();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_line_height, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_line_height")]
		public static float ui_line_height()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_line_height();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_space, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_space")]
		public static void ui_space(float space)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_space(space);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_is_interacting, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_is_interacting")]
		public static bool ui_is_interacting(global::StereoKit.Handed__StereoKit hand)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_is_interacting(hand);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_behavior, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] float__float, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_behavior")]
		public static void ui_button_behavior(
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size, 
					ulong id, 
					out float finger_offset, 
					out global::StereoKit.BtnState__StereoKit button_state, 
					out global::StereoKit.BtnState__StereoKit focus_state)
		{
			// Marshalling
			fixed (float* pinned_finger_offset = &(finger_offset))
				fixed (global::StereoKit.BtnState__StereoKit* pinned_button_state = &(button_state))
					fixed (global::StereoKit.BtnState__StereoKit* pinned_focus_state = &(focus_state))
					{
						// Call to native method
						global::__Interop.StereoKitC_PInvokes.ui_button_behavior(
											window_relative_pos, 
											size, 
											id, 
											pinned_finger_offset, 
											pinned_button_state, 
											pinned_focus_state
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
		}

		// Signature, ui_volumei_at_16, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_volumei_at_16")]
		public static global::StereoKit.BtnState__StereoKit ui_volumei_at_16(
					string id, 
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.UIConfirm__StereoKit interact_type, 
					global::System.IntPtr out_opt_hand, 
					global::System.IntPtr out_opt_focus_state)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_volumei_at_16(
									unsafe_id, 
									bounds, 
									interact_type, 
									out_opt_hand, 
									out_opt_focus_state
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_volumei_at_16__0, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_volumei_at_16")]
		public static global::StereoKit.BtnState__StereoKit ui_volumei_at_16__0(
					string id, 
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.UIConfirm__StereoKit interact_type, 
					out global::StereoKit.Handed__StereoKit out_opt_hand, 
					global::System.IntPtr out_opt_focus_state)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				fixed (global::StereoKit.Handed__StereoKit* pinned_out_opt_hand = &(out_opt_hand))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_volumei_at_16__0(
										unsafe_id, 
										bounds, 
										interact_type, 
										pinned_out_opt_hand, 
										out_opt_focus_state
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_volumei_at_16__1, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_volumei_at_16")]
		public static global::StereoKit.BtnState__StereoKit ui_volumei_at_16__1(
					string id, 
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.UIConfirm__StereoKit interact_type, 
					out global::StereoKit.Handed__StereoKit out_opt_hand, 
					out global::StereoKit.BtnState__StereoKit out_opt_focus_state)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				fixed (global::StereoKit.Handed__StereoKit* pinned_out_opt_hand = &(out_opt_hand))
					fixed (global::StereoKit.BtnState__StereoKit* pinned_out_opt_focus_state = &(out_opt_focus_state))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_volumei_at_16__1(
											unsafe_id, 
											bounds, 
											interact_type, 
											pinned_out_opt_hand, 
											pinned_out_opt_focus_state
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_volume_at_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_volume_at_16")]
		public static bool ui_volume_at_16(
					string id, 
					global::StereoKit.Bounds__StereoKit bounds)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_volume_at_16(
									unsafe_id, 
									bounds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_interact_volume_at, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_interact_volume_at")]
		public static global::StereoKit.BtnState__StereoKit ui_interact_volume_at(
					global::StereoKit.Bounds__StereoKit bounds, 
					out global::StereoKit.Handed__StereoKit out_hand)
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Handed__StereoKit* pinned_out_hand = &(out_hand))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_interact_volume_at(
									bounds, 
									pinned_out_hand
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_button_at_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_at_16")]
		public static bool ui_button_at_16(
					string text, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_at_16(
									unsafe_text, 
									window_relative_pos, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_img_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIBtnLayout__StereoKit__UIBtnLayout__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_img_16")]
		public static bool ui_button_img_16(
					string text, 
					global::System.IntPtr image, 
					global::StereoKit.UIBtnLayout__StereoKit image_layout, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_img_16(
									unsafe_text, 
									image, 
									image_layout, 
									window_relative_pos, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_round_at_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_round_at_16")]
		public static bool ui_button_round_at_16(
					string text, 
					global::System.IntPtr image_sprite, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					float diameter)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_round_at_16(
									unsafe_text, 
									image_sprite, 
									window_relative_pos, 
									diameter
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_toggle_at_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_toggle_at_16")]
		public static bool ui_toggle_at_16(
					string text, 
					ref int pressed, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (int* pinned_pressed = &(pressed))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_toggle_at_16(
										unsafe_text, 
										pinned_pressed, 
										window_relative_pos, 
										size
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_progress_bar_at, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_progress_bar_at")]
		public static void ui_progress_bar_at(
					float percent, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_progress_bar_at(
								percent, 
								window_relative_pos, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_hslider_at_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hslider_at_16")]
		public static bool ui_hslider_at_16(
					string id, 
					ref float value, 
					float min, 
					float max, 
					float step, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIConfirm__StereoKit confirm_method)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				fixed (float* pinned_value = &(value))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_hslider_at_16(
										unsafe_id, 
										pinned_value, 
										min, 
										max, 
										step, 
										window_relative_pos, 
										size, 
										confirm_method
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_hslider_at_f64_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hslider_at_f64_16")]
		public static bool ui_hslider_at_f64_16(
					string id, 
					ref double value, 
					double min, 
					double max, 
					double step, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIConfirm__StereoKit confirm_method)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				fixed (double* pinned_value = &(value))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_hslider_at_f64_16(
										unsafe_id, 
										pinned_value, 
										min, 
										max, 
										step, 
										window_relative_pos, 
										size, 
										confirm_method
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_hseparator, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hseparator")]
		public static void ui_hseparator()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_hseparator();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_label_16, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_label_16")]
		public static void ui_label_16(
					string text, 
					bool use_padding)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.ui_label_16(
									unsafe_text, 
									(use_padding ? 1 : 0)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, ui_label_sz_16, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_label_sz_16")]
		public static void ui_label_sz_16(
					string text, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.ui_label_sz_16(
									unsafe_text, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, ui_text_16, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_text_16")]
		public static void ui_text_16(
					string text, 
					global::StereoKit.TextAlign__StereoKit text_align)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				global::__Interop.StereoKitC_PInvokes.ui_text_16(
									unsafe_text, 
									text_align
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, ui_image, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_image")]
		public static void ui_image(
					global::System.IntPtr sprite_image, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_image(
								sprite_image, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_button_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_16")]
		public static bool ui_button_16(string text)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_16(unsafe_text);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_sz_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_sz_16")]
		public static bool ui_button_sz_16(
					string text, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_sz_16(
									unsafe_text, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_img_16__0, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIBtnLayout__StereoKit__UIBtnLayout__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_img_16")]
		public static bool ui_button_img_16__0(
					string text, 
					global::System.IntPtr image, 
					global::StereoKit.UIBtnLayout__StereoKit image_layout)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_img_16__0(
									unsafe_text, 
									image, 
									image_layout
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_img_sz_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIBtnLayout__StereoKit__UIBtnLayout__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_img_sz_16")]
		public static bool ui_button_img_sz_16(
					string text, 
					global::System.IntPtr image, 
					global::StereoKit.UIBtnLayout__StereoKit image_layout, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_img_sz_16(
									unsafe_text, 
									image, 
									image_layout, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_button_round_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_round_16")]
		public static bool ui_button_round_16(
					string id, 
					global::System.IntPtr image, 
					float diameter)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_button_round_16(
									unsafe_id, 
									image, 
									diameter
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_toggle_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_toggle_16")]
		public static bool ui_toggle_16(
					string text, 
					ref int pressed)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (int* pinned_pressed = &(pressed))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_toggle_16(
										unsafe_text, 
										pinned_pressed
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_toggle_sz_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_toggle_sz_16")]
		public static bool ui_toggle_sz_16(
					string text, 
					ref int pressed, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (int* pinned_pressed = &(pressed))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_toggle_sz_16(
										unsafe_text, 
										pinned_pressed, 
										size
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_model, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_model")]
		public static bool ui_model(
					global::System.IntPtr model, 
					global::StereoKit.Vec2__StereoKit ui_size, 
					float model_scale)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_model(
								model, 
								ui_size, 
								model_scale
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_input_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [EETypeRva:0x00041CF4] System_Text_StringBuilder__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextContext__StereoKit__TextContext__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_input_16")]
		public static bool ui_input_16(
					string id, 
					global::System.Text.StringBuilder buffer, 
					int buffer_size, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.TextContext__StereoKit type)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			ushort* unsafe_buffer = default(ushort*);
			int unsafe___value;
			try
			{
				// Marshalling
				fixed (char* pinned_id = id)
				{
					unsafe_id = (ushort*)pinned_id;
					if (buffer == null)
						unsafe_buffer = null;
					else
					{
						unsafe_buffer = (ushort*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(new global::System.IntPtr(checked(buffer.Capacity * 2 
											+ 2)));
						if (unsafe_buffer == null)
							throw new global::System.OutOfMemoryException();
					}
					if (unsafe_buffer != null)
						global::System.Runtime.InteropServices.McgMarshal.StringBuilderToUnicodeString(
											buffer, 
											unsafe_buffer
										);
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_input_16(
										unsafe_id, 
										unsafe_buffer, 
										buffer_size, 
										size, 
										type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					if (buffer != null)
						global::System.Runtime.InteropServices.McgMarshal.UnicodeStringToStringBuilder(
											unsafe_buffer, 
											buffer
										);
				}
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				if (unsafe_buffer != null)
					global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_buffer);
			}
		}

		// Signature, ui_progress_bar, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_progress_bar")]
		public static void ui_progress_bar(
					float percent, 
					float width)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_progress_bar(
								percent, 
								width
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_hslider_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hslider_16")]
		public static bool ui_hslider_16(
					string id, 
					ref float value, 
					float min, 
					float max, 
					float step, 
					float width, 
					global::StereoKit.UIConfirm__StereoKit confirm_method)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				fixed (float* pinned_value = &(value))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_hslider_16(
										unsafe_id, 
										pinned_value, 
										min, 
										max, 
										step, 
										width, 
										confirm_method
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_hslider_f64_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIConfirm__StereoKit__UIConfirm__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hslider_f64_16")]
		public static bool ui_hslider_f64_16(
					string id, 
					ref double value, 
					double min, 
					double max, 
					double step, 
					float width, 
					global::StereoKit.UIConfirm__StereoKit confirm_method)
		{
			// Setup
			ushort* unsafe_id = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_id = id)
			{
				unsafe_id = (ushort*)pinned_id;
				fixed (double* pinned_value = &(value))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_hslider_f64_16(
										unsafe_id, 
										pinned_value, 
										min, 
										max, 
										step, 
										width, 
										confirm_method
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_handle_begin_16, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIMove__StereoKit__UIMove__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_handle_begin_16")]
		public static bool ui_handle_begin_16(
					string text, 
					ref global::StereoKit.Pose__StereoKit movement, 
					global::StereoKit.Bounds__StereoKit handle, 
					int draw, 
					global::StereoKit.UIMove__StereoKit move_type)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (global::StereoKit.Pose__StereoKit* pinned_movement = &(movement))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_PInvokes.ui_handle_begin_16(
										unsafe_text, 
										pinned_movement, 
										handle, 
										draw, 
										move_type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_handle_end, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_handle_end")]
		public static void ui_handle_end()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_handle_end();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_window_begin_16, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIWin__StereoKit__UIWin__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIMove__StereoKit__UIMove__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_window_begin_16")]
		public static void ui_window_begin_16(
					string text, 
					ref global::StereoKit.Pose__StereoKit pose, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIWin__StereoKit window_type, 
					global::StereoKit.UIMove__StereoKit move_type)
		{
			// Setup
			ushort* unsafe_text = default(ushort*);
			// Marshalling
			fixed (char* pinned_text = text)
			{
				unsafe_text = (ushort*)pinned_text;
				fixed (global::StereoKit.Pose__StereoKit* pinned_pose = &(pose))
				{
					// Call to native method
					global::__Interop.StereoKitC_PInvokes.ui_window_begin_16(
										unsafe_text, 
										pinned_pose, 
										size, 
										window_type, 
										move_type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
		}

		// Signature, ui_window_end, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_window_end")]
		public static void ui_window_end()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_window_end();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_panel_at, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIPad__StereoKit__UIPad__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_panel_at")]
		public static void ui_panel_at(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIPad__StereoKit padding)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_panel_at(
								start, 
								size, 
								padding
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_panel_begin, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIPad__StereoKit__UIPad__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_panel_begin")]
		public static void ui_panel_begin(global::StereoKit.UIPad__StereoKit padding)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_panel_begin(padding);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_panel_end, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_panel_end")]
		public static void ui_panel_end()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_PInvokes.ui_panel_end();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'kernel32'
	/// </summary>
	public unsafe static partial class kernel32
	{
		// Signature, LoadLibraryW, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeLib", "LoadLibraryW")]
		public static global::System.IntPtr LoadLibraryW(string fileName)
		{
			// Setup
			ushort* unsafe_fileName = default(ushort*);
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (char* pinned_fileName = fileName)
			{
				unsafe_fileName = (ushort*)pinned_fileName;
				// Call to native method
				unsafe___value = global::__Interop.kernel32_PInvokes.LoadLibraryW(unsafe_fileName);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'dl'
	/// </summary>
	public unsafe static partial class dl
	{
		// Signature, dlopen, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeLib", "dlopen")]
		public static global::System.IntPtr dlopen(
					string fileName, 
					int flags)
		{
			// Setup
			byte* unsafe_fileName = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_fileName = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(fileName, true, false);
				// Call to native method
				unsafe___value = global::__Interop.dl_PInvokes.dlopen(
									unsafe_fileName, 
									flags
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_fileName);
			}
		}
	}

	/// <summary>
	/// P/Invoke class for module 'libdl.so.2'
	/// </summary>
	public unsafe static partial class libdl_so_2
	{
		// Signature, dlopen2, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeLib", "dlopen2")]
		public static global::System.IntPtr dlopen2(
					string fileName, 
					int flags)
		{
			// Setup
			byte* unsafe_fileName = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_fileName = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(fileName, true, false);
				// Call to native method
				unsafe___value = global::__Interop.libdl_so_2_PInvokes.dlopen2(
									unsafe_fileName, 
									flags
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_fileName);
			}
		}
	}

	/// <summary>
	/// P/Invoke class for module 'kernel32.dll'
	/// </summary>
	public unsafe static partial class kernel32_dll
	{
		// Signature, GetStdHandle, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.Log", "GetStdHandle")]
		public static global::System.IntPtr GetStdHandle(int nStdHandle)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetStdHandle(nStdHandle);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value;
		}

		// Signature, GetConsoleMode, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.Log", "GetConsoleMode")]
		public static bool GetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					out uint lpMode)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (uint* pinned_lpMode = &(lpMode))
			{
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetConsoleMode(
									hConsoleHandle, 
									pinned_lpMode
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, SetConsoleMode, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.3.6.0, Culture=neutral, PublicKeyToken=null", "StereoKit.Log", "SetConsoleMode")]
		public static bool SetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					uint dwMode)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.SetConsoleMode(
								hConsoleHandle, 
								dwMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, GetNativeSystemInfo, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] __Interop_Kernel32_SYSTEM_INFO__System_Runtime_InteropServices_RuntimeInformation____Interop_Kernel32_SYSTEM_INFO__System_Runtime_InteropServices_RuntimeInformation, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.InteropServices.RuntimeInformation, Version=4.0.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
			"0a3a", "Interop+Kernel32", "GetNativeSystemInfo")]
		public static void GetNativeSystemInfo(out global::_.Interop_Kernel32_SYSTEM_INFO__System_Runtime_InteropServices_RuntimeInformation lpSystemInfo)
		{
			// Marshalling
			fixed (global::_.Interop_Kernel32_SYSTEM_INFO__System_Runtime_InteropServices_RuntimeInformation* pinned_lpSystemInfo = &(lpSystemInfo))
			{
				// Call to native method
				global::__Interop.kernel32_dll_PInvokes.GetNativeSystemInfo(pinned_lpSystemInfo);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, GetCPInfoExW, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] __Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages___ptr__Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetCPInfoExW")]
		public static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetCPInfoExW(
								CodePage, 
								dwFlags, 
								((global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages*)lpCPInfoEx)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, GetStdHandle__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetStdHandle")]
		public static global::System.IntPtr GetStdHandle__0(int nStdHandle)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetStdHandle__0(nStdHandle);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value;
		}

		// Signature, WriteFile, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "WriteFile")]
		public static int WriteFile(
					global::System.IntPtr handle, 
					byte* bytes, 
					int numBytesToWrite, 
					out int numBytesWritten, 
					global::System.IntPtr mustBeZero)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_numBytesWritten = &(numBytesWritten))
			{
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.WriteFile(
									handle, 
									((byte*)bytes), 
									numBytesToWrite, 
									pinned_numBytesWritten, 
									mustBeZero
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value;
		}

		// Signature, GetFileType, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetFileType")]
		public static uint GetFileType(global::System.IntPtr hFile)
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetFileType(hFile);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value;
		}

		// Signature, GetConsoleOutputCP, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetConsoleOutputCP")]
		public static uint GetConsoleOutputCP()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetConsoleOutputCP();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value;
		}

		// Signature, ReadFile, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "ReadFile")]
		public static int ReadFile(
					global::System.IntPtr handle, 
					byte* bytes, 
					int numBytesToRead, 
					out int numBytesRead, 
					global::System.IntPtr mustBeZero)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_numBytesRead = &(numBytesRead))
			{
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.ReadFile(
									handle, 
									((byte*)bytes), 
									numBytesToRead, 
									pinned_numBytesRead, 
									mustBeZero
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value;
		}

		// Signature, ReadConsole, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "ReadConsole")]
		public static bool ReadConsole(
					global::System.IntPtr hConsoleInput, 
					byte* lpBuffer, 
					int nNumberOfCharsToRead, 
					out int lpNumberOfCharsRead, 
					global::System.IntPtr pInputControl)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_lpNumberOfCharsRead = &(lpNumberOfCharsRead))
			{
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.ReadConsole(
									hConsoleInput, 
									((byte*)lpBuffer), 
									nNumberOfCharsToRead, 
									pinned_lpNumberOfCharsRead, 
									pInputControl
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, WriteConsole, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "WriteConsole")]
		public static bool WriteConsole(
					global::System.IntPtr hConsoleOutput, 
					byte* lpBuffer, 
					int nNumberOfCharsToWrite, 
					out int lpNumberOfCharsWritten, 
					global::System.IntPtr lpReservedMustBeNull)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_lpNumberOfCharsWritten = &(lpNumberOfCharsWritten))
			{
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.WriteConsole(
									hConsoleOutput, 
									((byte*)lpBuffer), 
									nNumberOfCharsToWrite, 
									pinned_lpNumberOfCharsWritten, 
									lpReservedMustBeNull
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, GetConsoleCP, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetConsoleCP")]
		public static uint GetConsoleCP()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetConsoleCP();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value;
		}

		// Signature, WideCharToMultiByte, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "WideCharToMultiByte")]
		public static int WideCharToMultiByte(
					uint CodePage, 
					uint dwFlags, 
					char* lpWideCharStr, 
					int cchWideChar, 
					byte* lpMultiByteStr, 
					int cbMultiByte, 
					global::System.IntPtr lpDefaultChar, 
					global::System.IntPtr lpUsedDefaultChar)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.WideCharToMultiByte(
								CodePage, 
								dwFlags, 
								((ushort*)lpWideCharStr), 
								cchWideChar, 
								((byte*)lpMultiByteStr), 
								cbMultiByte, 
								lpDefaultChar, 
								lpUsedDefaultChar
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, MultiByteToWideChar, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "MultiByteToWideChar")]
		public static int MultiByteToWideChar(
					uint CodePage, 
					uint dwFlags, 
					byte* lpMultiByteStr, 
					int cbMultiByte, 
					char* lpWideCharStr, 
					int cchWideChar)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.MultiByteToWideChar(
								CodePage, 
								dwFlags, 
								((byte*)lpMultiByteStr), 
								cbMultiByte, 
								((ushort*)lpWideCharStr), 
								cchWideChar
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, GetCPInfoExW__0, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] __Interop_Kernel32_CPINFOEXW__System_Console___ptr__Interop_Kernel32_CPINFOEXW__System_Console *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetCPInfoExW")]
		public static int GetCPInfoExW__0(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Console* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetCPInfoExW__0(
								CodePage, 
								dwFlags, 
								((global::_.Interop_Kernel32_CPINFOEXW__System_Console*)lpCPInfoEx)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, GetConsoleMode__0, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetConsoleMode")]
		public static bool GetConsoleMode__0(
					global::System.IntPtr handle, 
					out int mode)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_mode = &(mode))
			{
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetConsoleMode__0(
									handle, 
									pinned_mode
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, FormatMessage, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_System_IntPtr____w64 int *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "FormatMessage")]
		public static int FormatMessage(
					int dwFlags, 
					global::System.IntPtr lpSource, 
					uint dwMessageId, 
					int dwLanguageId, 
					char* lpBuffer, 
					int nSize, 
					global::System.IntPtr[] arguments)
		{
			// Setup
			global::System.IntPtr* unsafe_arguments;
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_arguments = ((arguments != null 
						&& arguments.Length == 0) ? new global::System.IntPtr[1] : arguments))
			{
				unsafe_arguments = (global::System.IntPtr*)pinned_arguments;
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.FormatMessage(
									dwFlags, 
									lpSource, 
									dwMessageId, 
									dwLanguageId, 
									((ushort*)lpBuffer), 
									nSize, 
									unsafe_arguments
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module '[MRT]'
	/// </summary>
	public unsafe static partial class _MRT_
	{
		// Signature, RhpGetFuncEvalParameterBufferSize, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetFuncEvalParameterBufferSize")]
		public static uint RhpGetFuncEvalParameterBufferSize()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetFuncEvalParameterBufferSize();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpGetFuncEvalMode, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetFuncEvalMode")]
		public static uint RhpGetFuncEvalMode()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetFuncEvalMode();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpRecordDebuggeeInitiatedHandle, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpRecordDebuggeeInitiatedHandle")]
		public static uint RhpRecordDebuggeeInitiatedHandle(void* objectHandle)
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpRecordDebuggeeInitiatedHandle(((void*)objectHandle));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpVerifyDebuggerCleanup, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpVerifyDebuggerCleanup")]
		public static void RhpVerifyDebuggerCleanup()
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhpVerifyDebuggerCleanup();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, RhpGetCurrentThread, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetCurrentThread")]
		public static global::System.IntPtr RhpGetCurrentThread()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetCurrentThread();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhWaitForPendingFinalizers, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhWaitForPendingFinalizers")]
		public static void RhWaitForPendingFinalizers(int allowReentrantWait)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhWaitForPendingFinalizers(allowReentrantWait);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, _RhYield, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_RhYield")]
		public static int _RhYield()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes._RhYield();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhFlushProcessWriteBuffers, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhFlushProcessWriteBuffers")]
		public static void RhFlushProcessWriteBuffers()
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhFlushProcessWriteBuffers();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, RhCompatibleReentrantWaitAny, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr___ptr__w64 int *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCompatibleReentrantWaitAny")]
		public static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhCompatibleReentrantWaitAny(
								alertable, 
								timeout, 
								count, 
								((global::System.IntPtr*)handles)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhCallDescrWorkerNative, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCallDescrWorkerNative")]
		public static void RhCallDescrWorkerNative(global::System.IntPtr callDescr)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhCallDescrWorkerNative(callDescr);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, _ecvt_s, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int___ptrint *, [fwd] [in] [EETypeRva:0x000419B0] int___ptrint *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_ecvt_s")]
		public static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes._ecvt_s(
								((byte*)buffer), 
								sizeInBytes, 
								value, 
								count, 
								((int*)dec), 
								((int*)sign)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, memmove, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memmove")]
		public static void memmove(
					byte* dmem, 
					byte* smem, 
					ulong size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memmove(
								((byte*)dmem), 
								((byte*)smem), 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, memset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memset")]
		public static void memset(
					byte* mem, 
					int value, 
					ulong size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memset(
								((byte*)mem), 
								value, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module '*'
	/// </summary>
	public unsafe static partial class _
	{
		// Signature, CallingConventionConverter_GetStubs, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.TypeLoader, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.Runtime.TypeLoader.CallConverterThunk", "CallingConventionConverter_GetStubs")]
		public static void CallingConventionConverter_GetStubs(
					out global::System.IntPtr returnVoidStub, 
					out global::System.IntPtr returnIntegerStub, 
					out global::System.IntPtr commonStub)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_returnVoidStub = &(returnVoidStub))
				fixed (global::System.IntPtr* pinned_returnIntegerStub = &(returnIntegerStub))
					fixed (global::System.IntPtr* pinned_commonStub = &(commonStub))
					{
						// Call to native method
						global::__Interop.__PInvokes.CallingConventionConverter_GetStubs(
											pinned_returnVoidStub, 
											pinned_returnIntegerStub, 
											pinned_commonStub
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-string-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_string_l1_1_0_dll
	{
		// Signature, WindowsCreateStringReference, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] System_Runtime_InteropServices_HSTRING_HEADER__System_Private_Interop___ptrSystem_Runtime_InteropServices__HSTRING_HEADER__System_Private_Interop *, [fwd] [in] [EETypeRva:0x000419B0] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore", "WindowsCreateStringReference")]
		public static int WindowsCreateStringReference(
					char* sourceString, 
					uint length, 
					global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop* phstringHeader, 
					void* hstring)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_string_l1_1_0_dll_PInvokes.WindowsCreateStringReference(
								((ushort*)sourceString), 
								length, 
								((global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop*)phstringHeader), 
								((void*)hstring)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-errorhandling-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll
	{
		// Signature, GetLastError, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetLastError")]
		public static int GetLastError()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.GetLastError();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, SetLastError, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "SetLastError")]
		public static void SetLastError(uint dwErrCode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.SetLastError(dwErrCode);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll
	{
		// Signature, RoInitialize, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "RoInitialize")]
		public static int RoInitialize(uint initType)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_l1_1_0_dll_PInvokes.RoInitialize(initType);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-localization-l1-2-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll
	{
		// Signature, IsValidLocaleName, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "IsValidLocaleName")]
		public static int IsValidLocaleName(char* lpLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.IsValidLocaleName(((ushort*)lpLocaleName));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ResolveLocaleName, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "ResolveLocaleName")]
		public static int ResolveLocaleName(
					char* lpNameToResolve, 
					char* lpLocaleName, 
					int cchLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.ResolveLocaleName(
								((ushort*)lpNameToResolve), 
								((ushort*)lpLocaleName), 
								cchLocaleName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-com-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.StackTraceGenerator.StackTraceGenerator", "CoCreateInstance")]
		public static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					out global::System.IntPtr ppv)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_ppv = &(ppv))
			{
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_com_l1_1_0_dll_PInvokes.CoCreateInstance(
									((byte*)rclsid), 
									pUnkOuter, 
									dwClsContext, 
									((byte*)riid), 
									pinned_ppv
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'OleAut32'
	/// </summary>
	public unsafe static partial class OleAut32
	{
		// Signature, SysFreeString, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.LightweightInterop.MarshalExtensions", "SysFreeString")]
		public static void SysFreeString(global::System.IntPtr bstr)
		{
			// Marshalling
			// Call to native method
			global::__Interop.OleAut32_PInvokes.SysFreeString(bstr);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-robuffer-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll
	{
		// Signature, RoGetBufferMarshaler, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00043660] System_Runtime_InteropServices_IMarshal__System_Runtime_WindowsRuntime__System_Runtime_InteropServices__IMarshal__System_Runtime_WindowsRuntime *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop+mincore", "RoGetBufferMarshaler")]
		public static int RoGetBufferMarshaler(out global::System_Runtime_InteropServices.IMarshal__System_Runtime_WindowsRuntime bufferMarshalerPtr)
		{
			// Setup
			void* unsafe_bufferMarshalerPtr = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_bufferMarshalerPtr = null;
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes.RoGetBufferMarshaler(&(unsafe_bufferMarshalerPtr));
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				bufferMarshalerPtr = (global::System_Runtime_InteropServices.IMarshal__System_Runtime_WindowsRuntime)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bufferMarshalerPtr), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Public" +
											"KeyToken=b77a5c561934e089")
								);
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bufferMarshalerPtr)));
			}
		}
	}

	public unsafe static partial class StereoKitC_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sk_init(global::StereoKit.SKSettings__StereoKit settings);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_set_window(global::System.IntPtr window);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_set_window_xam(global::System.IntPtr window);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_shutdown();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_quit();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sk_step(void* app_update);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_run(
					void* app_update, 
					void* app_shutdown);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.DisplayMode__StereoKit sk_active_display_mode();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SystemInfo__StereoKit sk_system_info();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sk_version_name();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong sk_version_id();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.AppFocus__StereoKit sk_app_focus();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_getf_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_get_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_getf();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_get();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_elapsedf_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_elapsed_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_elapsedf();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_elapsed();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void time_scale(double scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void time_set_time(
					double total_seconds, 
					double frame_elapsed_seconds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_difference(
					global::StereoKit.Quat__StereoKit* a, 
					global::StereoKit.Quat__StereoKit* b);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_lookat(
					global::StereoKit.Vec3__StereoKit* from, 
					global::StereoKit.Vec3__StereoKit* at);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_lookat_up(
					global::StereoKit.Vec3__StereoKit* from, 
					global::StereoKit.Vec3__StereoKit* at, 
					global::StereoKit.Vec3__StereoKit* up);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit matrix_transform_pose(
					global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Pose__StereoKit pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit matrix_trs(
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* orientation, 
					global::StereoKit.Vec3__StereoKit* scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit matrix_extract_scale(global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit matrix_extract_rotation(global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit matrix_extract_pose(global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int plane_ray_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int plane_line_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit p1, 
					global::StereoKit.Vec3__StereoKit p2, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit plane_point_closest(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sphere_ray_intersect(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sphere_point_contains(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_ray_intersect(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_point_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_line_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit linePt1, 
					global::StereoKit.Vec3__StereoKit linePt2);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_capsule_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit linePt1, 
					global::StereoKit.Vec3__StereoKit linePt2, 
					float radius);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit ray_point_closest(
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit color_hsv(
					float hue, 
					float saturation, 
					float value, 
					float transparency);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit color_to_hsv(global::StereoKit.Color__StereoKit* color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit color_lab(
					float l, 
					float a, 
					float b, 
					float transparency);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit color_to_lab(global::StereoKit.Color__StereoKit* color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit color_to_linear(global::StereoKit.Color__StereoKit srgb_gamma_correct);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit color_to_gamma(global::StereoKit.Color__StereoKit srgb_linear);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr gradient_create();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr gradient_create_keys(
					global::StereoKit.GradientKey__StereoKit* keys, 
					int count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_add(
					global::System.IntPtr gradient, 
					global::StereoKit.Color__StereoKit color, 
					float position);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_set(
					global::System.IntPtr gradient, 
					int index, 
					global::StereoKit.Color__StereoKit color, 
					float position);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_remove(
					global::System.IntPtr gradient, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int gradient_count(global::System.IntPtr gradient);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit gradient_get(
					global::System.IntPtr gradient, 
					float at);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color32__StereoKit gradient_get32(
					global::System.IntPtr gradient, 
					float at);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_release(global::System.IntPtr gradient);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SphericalHarmonics__StereoKit sh_create(
					global::StereoKit.SHLight__StereoKit* lights, 
					int light_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sh_brightness(
					global::StereoKit.SphericalHarmonics__StereoKit* harmonics, 
					float scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sh_add(
					global::StereoKit.SphericalHarmonics__StereoKit* harmonics, 
					global::StereoKit.Vec3__StereoKit light_dir, 
					global::StereoKit.Vec3__StereoKit light_color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit sh_lookup(
					global::StereoKit.SphericalHarmonics__StereoKit* harmonics, 
					global::StereoKit.Vec3__StereoKit normal);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit sh_dominant_dir(global::StereoKit.SphericalHarmonics__StereoKit* harmonics);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_create();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_id(
					global::System.IntPtr mesh, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_addref(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_release(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_keep_data(
					global::System.IntPtr mesh, 
					int keep_data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_get_keep_data(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_verts(
					global::System.IntPtr mesh, 
					global::StereoKit.Vertex__StereoKit* vertices, 
					int vertex_count, 
					int calculate_bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_get_verts(
					global::System.IntPtr mesh, 
					global::System.IntPtr* out_vertices, 
					int* out_vertex_count, 
					global::StereoKit.Memory__StereoKit reference_mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_get_vert_count(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_inds(
					global::System.IntPtr mesh, 
					uint* indices, 
					int index_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_get_inds(
					global::System.IntPtr mesh, 
					global::System.IntPtr* out_indices, 
					int* out_index_count, 
					global::StereoKit.Memory__StereoKit reference_mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_get_ind_count(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_draw_inds(
					global::System.IntPtr mesh, 
					int index_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_bounds(
					global::System.IntPtr mesh, 
					global::StereoKit.Bounds__StereoKit* bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Bounds__StereoKit mesh_get_bounds(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_ray_intersect(
					global::System.IntPtr mesh, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					global::StereoKit.Ray__StereoKit* out_pt, 
					global::System.IntPtr out_start_inds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="mesh_ray_intersect", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_ray_intersect__0(
					global::System.IntPtr mesh, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					global::StereoKit.Ray__StereoKit* out_pt, 
					uint* out_start_inds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_get_triangle(
					global::System.IntPtr mesh, 
					uint triangle_index, 
					global::StereoKit.Vertex__StereoKit* a, 
					global::StereoKit.Vertex__StereoKit* b, 
					global::StereoKit.Vertex__StereoKit* c);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_plane(
					global::StereoKit.Vec2__StereoKit dimensions, 
					global::StereoKit.Vec3__StereoKit plane_normal, 
					global::StereoKit.Vec3__StereoKit plane_top_direction, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_sphere(
					float diameter, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_rounded_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					float edge_radius, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_cylinder(
					float diameter, 
					float depth, 
					global::StereoKit.Vec3__StereoKit direction, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create(
					global::StereoKit.TexType__StereoKit type, 
					global::StereoKit.TexFormat__StereoKit format);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_color32(
					global::StereoKit.Color32__StereoKit* data, 
					int width, 
					int height, 
					int srgb_data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_color128(
					global::StereoKit.Color__StereoKit* data, 
					int width, 
					int height, 
					int srgb_data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_mem(
					byte* data, 
					global::System.UIntPtr data_size, 
					int srgb_data, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_file(
					byte* file_utf8, 
					int srgb_data, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_file_arr(
					byte** files, 
					int file_count, 
					int srgb_data, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_file(
					byte* equirectangular_file_utf8, 
					int srgb_data, 
					global::System.IntPtr lighting_info, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_create_cubemap_file", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_file__0(
					byte* equirectangular_file_utf8, 
					int srgb_data, 
					global::StereoKit.SphericalHarmonics__StereoKit* lighting_info, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_files(
					byte** cube_face_file_xxyyzz, 
					int srgb_data, 
					global::System.IntPtr lighting_info, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_create_cubemap_files", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_files__0(
					byte** cube_face_file_xxyyzz, 
					int srgb_data, 
					global::StereoKit.SphericalHarmonics__StereoKit* lighting_info, 
					int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_id(
					global::System.IntPtr texture, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_fallback(
					global::System.IntPtr texture, 
					global::System.IntPtr fallback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_release(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_addref(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.AssetState__StereoKit tex_asset_state(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_on_load(
					global::System.IntPtr texture, 
					void* on_load, 
					global::System.IntPtr context);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_on_load_remove(
					global::System.IntPtr texture, 
					void* on_load);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::System.IntPtr data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__0(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color32__StereoKit* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__1(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color__StereoKit* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__2(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					byte* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__3(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					ushort* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__4(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					float* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_surface(
					global::System.IntPtr texture, 
					global::System.IntPtr native_surface, 
					global::StereoKit.TexType__StereoKit type, 
					long native_fmt, 
					int width, 
					int height, 
					int surface_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_add_zbuffer(
					global::System.IntPtr texture, 
					global::StereoKit.TexFormat__StereoKit format);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_get_data(
					global::System.IntPtr texture, 
					global::System.IntPtr out_data, 
					global::System.UIntPtr out_data_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_color(
					global::StereoKit.Color__StereoKit color, 
					int width, 
					int height, 
					global::StereoKit.TexType__StereoKit type, 
					global::StereoKit.TexFormat__StereoKit format);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_cubemap(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					global::System.IntPtr lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="tex_gen_cubemap", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_cubemap__0(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					global::StereoKit.SphericalHarmonics__StereoKit* lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_cubemap_sh(
					global::StereoKit.SphericalHarmonics__StereoKit* lighting, 
					int resolution, 
					float light_spot_size_pct, 
					float light_spot_intensity);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TexFormat__StereoKit tex_get_format(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int tex_get_width(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int tex_get_height(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_sample(
					global::System.IntPtr texture, 
					global::StereoKit.TexSample__StereoKit sample);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TexSample__StereoKit tex_get_sample(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_address(
					global::System.IntPtr texture, 
					global::StereoKit.TexAddress__StereoKit address_mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TexAddress__StereoKit tex_get_address(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_anisotropy(
					global::System.IntPtr texture, 
					int anisotropy_level);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int tex_get_anisotropy(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_loading_fallback(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_error_fallback(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SphericalHarmonics__StereoKit tex_get_cubemap_lighting(global::System.IntPtr cubemap_texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_create(byte* file_utf8);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_create_files(
					byte** file, 
					int file_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void font_release(global::System.IntPtr font);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_get_tex(global::System.IntPtr font);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_create_file(byte* filename_utf8);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_create_mem(
					byte* data, 
					global::System.UIntPtr data_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void shader_set_id(
					global::System.IntPtr shader, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_get_name(global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void shader_release(global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_create(global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_copy(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_copy_id(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_id(
					global::System.IntPtr material, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_release(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_transparency(
					global::System.IntPtr material, 
					global::StereoKit.Transparency__StereoKit mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_cull(
					global::System.IntPtr material, 
					global::StereoKit.Cull__StereoKit mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_wireframe(
					global::System.IntPtr material, 
					int wireframe);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_depth_test(
					global::System.IntPtr material, 
					global::StereoKit.DepthTest__StereoKit depth_test_mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_depth_write(
					global::System.IntPtr material, 
					int write_enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_queue_offset(
					global::System.IntPtr material, 
					int offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Transparency__StereoKit material_get_transparency(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Cull__StereoKit material_get_cull(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_get_wireframe(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.DepthTest__StereoKit material_get_depth_test(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_get_depth_write(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_get_queue_offset(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_float(
					global::System.IntPtr material, 
					byte* name, 
					float value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_color(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Color__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_vector4(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Vec4__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_vector3(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Vec3__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_vector2(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Vec2__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_int(
					global::System.IntPtr material, 
					byte* name, 
					int value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_int2(
					global::System.IntPtr material, 
					byte* name, 
					int value1, 
					int value2);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_int3(
					global::System.IntPtr material, 
					byte* name, 
					int value1, 
					int value2, 
					int value3);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_int4(
					global::System.IntPtr material, 
					byte* name, 
					int value1, 
					int value2, 
					int value3, 
					int value4);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_bool(
					global::System.IntPtr material, 
					byte* name, 
					int value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_uint(
					global::System.IntPtr material, 
					byte* name, 
					uint value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_uint2(
					global::System.IntPtr material, 
					byte* name, 
					uint value1, 
					uint value2);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_uint3(
					global::System.IntPtr material, 
					byte* name, 
					uint value1, 
					uint value2, 
					uint value3);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_uint4(
					global::System.IntPtr material, 
					byte* name, 
					uint value1, 
					uint value2, 
					uint value3, 
					uint value4);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_matrix(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Matrix__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_set_texture(
					global::System.IntPtr material, 
					byte* name, 
					global::System.IntPtr value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_set_texture_id(
					global::System.IntPtr material, 
					ulong id, 
					global::System.IntPtr value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_param(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.MaterialParam__StereoKit type, 
					global::System.IntPtr value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_get_param_info(
					global::System.IntPtr material, 
					int index, 
					global::System.IntPtr* out_name, 
					global::StereoKit.MaterialParam__StereoKit* out_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_get_param_count(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_shader(
					global::System.IntPtr material, 
					global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_get_shader(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_buffer_create(
					int slot, 
					int size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_buffer_set_data(
					global::System.IntPtr buffer, 
					global::System.IntPtr data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_buffer_release(global::System.IntPtr buffer);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TextStyle__StereoKit text_make_style(
					global::System.IntPtr font, 
					float character_height, 
					global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TextStyle__StereoKit text_make_style_shader(
					global::System.IntPtr font, 
					float character_height, 
					global::System.IntPtr shader, 
					global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TextStyle__StereoKit text_make_style_mat(
					global::System.IntPtr font, 
					float character_height, 
					global::System.IntPtr material, 
					global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void text_add_at_16(
					ushort* text, 
					global::StereoKit.Matrix__StereoKit* transform, 
					uint style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z, 
					global::StereoKit.Color__StereoKit vertex_tint_linear);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float text_add_in_16(
					ushort* text, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.TextFit__StereoKit fit, 
					uint style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z, 
					global::StereoKit.Color__StereoKit vertex_tint_linear);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit text_size_16(
					ushort* text, 
					uint style);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr text_style_get_material(global::StereoKit.TextStyle__StereoKit style);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float text_style_get_char_height(global::StereoKit.TextStyle__StereoKit style);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr solid_create(
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* rotation, 
					global::StereoKit.SolidType__StereoKit type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_release(global::System.IntPtr solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_add_sphere(
					global::System.IntPtr solid, 
					float diameter, 
					float kilograms, 
					global::StereoKit.Vec3__StereoKit* offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_add_box(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* dimensions, 
					float kilograms, 
					global::StereoKit.Vec3__StereoKit* offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_add_capsule(
					global::System.IntPtr solid, 
					float diameter, 
					float height, 
					float kilograms, 
					global::StereoKit.Vec3__StereoKit* offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_type(
					global::System.IntPtr solid, 
					global::StereoKit.SolidType__StereoKit type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_enabled(
					global::System.IntPtr solid, 
					int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_move(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* rotation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_teleport(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* rotation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_velocity(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* meters_per_second);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_velocity_ang(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* radians_per_second);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_get_pose(
					global::System.IntPtr solid, 
					global::StereoKit.Pose__StereoKit* out_pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_copy(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create_mem(
					byte* filename_utf8, 
					byte* data, 
					global::System.UIntPtr data_size, 
					global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create_file(
					byte* filename_utf8, 
					global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_id(
					global::System.IntPtr model, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_addref(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_release(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_get_name(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_get_material(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_get_mesh(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit model_get_transform(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_material(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_mesh(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_transform(
					global::System.IntPtr model, 
					int subset, 
					global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_remove_subset(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_add_subset(
					global::System.IntPtr model, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_add_named_subset(
					global::System.IntPtr model, 
					byte* name, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_subset_count(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_recalculate_bounds(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_bounds(
					global::System.IntPtr model, 
					global::StereoKit.Bounds__StereoKit* bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Bounds__StereoKit model_get_bounds(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_ray_intersect(
					global::System.IntPtr model, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					global::StereoKit.Ray__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_step_anim(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_play_anim(
					global::System.IntPtr model, 
					byte* animation_name, 
					global::StereoKit.AnimMode__StereoKit mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_play_anim_idx(
					global::System.IntPtr model, 
					int index, 
					global::StereoKit.AnimMode__StereoKit mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_anim_time(
					global::System.IntPtr model, 
					float time);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_anim_completion(
					global::System.IntPtr model, 
					float percent);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_anim_find(
					global::System.IntPtr model, 
					byte* animation_name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_anim_count(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_anim_active(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.AnimMode__StereoKit model_anim_active_mode(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float model_anim_active_time(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float model_anim_active_completion(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_anim_get_name(
					global::System.IntPtr model, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float model_anim_get_duration(
					global::System.IntPtr model, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_add(
					global::System.IntPtr model, 
					byte* name, 
					global::StereoKit.Matrix__StereoKit model_transform, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					int solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_add_child(
					global::System.IntPtr model, 
					int parent, 
					byte* name, 
					global::StereoKit.Matrix__StereoKit local_transform, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					int solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_find(
					global::System.IntPtr model, 
					byte* name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_sibling(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_parent(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_child(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_count(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_index(
					global::System.IntPtr model, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_visual_count(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_visual_index(
					global::System.IntPtr model, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_iterate(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_get_root(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_node_get_name(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_get_solid(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_node_get_visible(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_node_get_material(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_node_get_mesh(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit model_node_get_transform_model(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit model_node_get_transform_local(
					global::System.IntPtr model, 
					int node);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_name(
					global::System.IntPtr model, 
					int node, 
					byte* name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_solid(
					global::System.IntPtr model, 
					int node, 
					int solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_visible(
					global::System.IntPtr model, 
					int node, 
					int visible);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_material(
					global::System.IntPtr model, 
					int node, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_mesh(
					global::System.IntPtr model, 
					int node, 
					global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_transform_model(
					global::System.IntPtr model, 
					int node, 
					global::StereoKit.Matrix__StereoKit transform_model_space);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_node_set_transform_local(
					global::System.IntPtr model, 
					int node, 
					global::StereoKit.Matrix__StereoKit transform_local_space);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sprite_create(
					global::System.IntPtr sprite, 
					global::StereoKit.SpriteType__StereoKit type, 
					byte* atlas_id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sprite_create_file(
					byte* filename_utf8, 
					global::StereoKit.SpriteType__StereoKit type, 
					byte* atlas_id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_set_id(
					global::System.IntPtr sprite, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_release(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float sprite_get_aspect(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_draw(
					global::System.IntPtr sprite, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Color32__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_draw_at(
					global::System.IntPtr sprite, 
					global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.Color32__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sprite_get_width(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sprite_get_height(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit sprite_get_dimensions_normalized(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void line_add(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec3__StereoKit end, 
					global::StereoKit.Color32__StereoKit color_start, 
					global::StereoKit.Color32__StereoKit color_end, 
					float thickness);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void line_add_listv(
					global::StereoKit.LinePoint__StereoKit* points, 
					int count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_clip(
					float near_plane, 
					float far_plane);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_fov(float field_of_view_degrees);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_ortho_clip(
					float near_plane, 
					float far_plane);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_ortho_size(float viewport_height_meters);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_projection(global::StereoKit.Projection__StereoKit proj);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Projection__StereoKit render_get_projection();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit render_get_cam_root();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_cam_root(global::StereoKit.Matrix__StereoKit* cam_root);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_skytex(global::System.IntPtr sky_texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr render_get_skytex();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_skylight(global::StereoKit.SphericalHarmonics__StereoKit* lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.RenderLayer__StereoKit render_get_filter();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_filter(global::StereoKit.RenderLayer__StereoKit layer_filter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_override_capture_filter(
					int use_override_filter, 
					global::StereoKit.RenderLayer__StereoKit layer_filter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.RenderLayer__StereoKit render_get_capture_filter();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int render_has_capture_filter();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SphericalHarmonics__StereoKit render_get_skylight();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_clear_color(global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit render_get_clear_color();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_enable_skytex(int show_sky);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int render_enabled_skytex();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_add_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Color__StereoKit color, 
					global::StereoKit.RenderLayer__StereoKit layer);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_add_model(
					global::System.IntPtr model, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Color__StereoKit color, 
					global::StereoKit.RenderLayer__StereoKit layer);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_blit(
					global::System.IntPtr to_rendertarget, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_screenshot(
					byte* file, 
					global::StereoKit.Vec3__StereoKit from_viewpt, 
					global::StereoKit.Vec3__StereoKit at, 
					int width, 
					int height, 
					float fov_degrees);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_to(
					global::System.IntPtr to_rendertarget, 
					global::StereoKit.Matrix__StereoKit* camera, 
					global::StereoKit.Matrix__StereoKit* projection, 
					global::StereoKit.RenderLayer__StereoKit layer_filter, 
					global::StereoKit.RenderClear__StereoKit clear, 
					global::StereoKit.Rect__StereoKit viewport);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void hierarchy_push(global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void hierarchy_pop();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void hierarchy_set_enabled(int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int hierarchy_is_enabled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_local_point(global::StereoKit.Vec3__StereoKit* world_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_local_direction(global::StereoKit.Vec3__StereoKit* world_dir);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit hierarchy_to_local_rotation(global::StereoKit.Quat__StereoKit* world_orientation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit hierarchy_to_local_pose(global::StereoKit.Pose__StereoKit* world_pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_world_point(global::StereoKit.Vec3__StereoKit* local_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_world_direction(global::StereoKit.Vec3__StereoKit* local_dir);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit hierarchy_to_world_rotation(global::StereoKit.Quat__StereoKit* local_orientation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit hierarchy_to_world_pose(global::StereoKit.Pose__StereoKit* local_pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_set_id(
					global::System.IntPtr sound, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_create(byte* filename_utf8);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_create_stream(float buffer_duration);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_create_samples(
					float* samples_at_48000s, 
					ulong sample_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_generate(
					void* function, 
					float duration);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_write_samples(
					global::System.IntPtr sound, 
					float* samples, 
					ulong sample_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong sound_read_samples(
					global::System.IntPtr sound, 
					float* out_samples, 
					ulong sample_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong sound_unread_samples(global::System.IntPtr sound);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong sound_total_samples(global::System.IntPtr sound);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong sound_cursor_samples(global::System.IntPtr sound);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SoundInst__StereoKit sound_play(
					global::System.IntPtr sound, 
					global::StereoKit.Vec3__StereoKit at, 
					float volume);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float sound_duration(global::System.IntPtr sound);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_release(global::System.IntPtr sound);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_inst_stop(global::StereoKit.SoundInst__StereoKit sound_inst);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sound_inst_is_playing(global::StereoKit.SoundInst__StereoKit sound_inst);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_inst_set_pos(
					global::StereoKit.SoundInst__StereoKit sound_inst, 
					global::StereoKit.Vec3__StereoKit pos);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit sound_inst_get_pos(global::StereoKit.SoundInst__StereoKit sound_inst);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_inst_set_volume(
					global::StereoKit.SoundInst__StereoKit sound_inst, 
					float volume);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float sound_inst_get_volume(global::StereoKit.SoundInst__StereoKit sound_inst);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mic_device_count();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mic_device_name(int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mic_start(byte* device_name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mic_stop();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mic_get_stream();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mic_is_recording();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void platform_file_picker_sz(
					global::StereoKit.PickerMode__StereoKit mode, 
					global::System.IntPtr callback_data, 
					void* on_callback, 
					global::StereoKit.FileFilter__StereoKit__Impl.UnsafeType* filters, 
					int filter_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void platform_file_picker_close();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int platform_file_picker_visible();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int platform_read_file(
					byte* name_utf8, 
					global::System.IntPtr* out_data, 
					global::System.UIntPtr* out_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int platform_write_file(
					byte* name_utf8, 
					byte* data, 
					global::System.UIntPtr size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int platform_keyboard_get_force_fallback();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void platform_keyboard_set_force_fallback(int force_fallback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int platform_keyboard_visible();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void platform_keyboard_show(
					int show, 
					global::StereoKit.TextContext__StereoKit inputType);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int input_pointer_count(global::StereoKit.InputSource__StereoKit filter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pointer__StereoKit input_pointer(
					int index, 
					global::StereoKit.InputSource__StereoKit filter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_hand(global::StereoKit.Handed__StereoKit hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_controller(global::StereoKit.Handed__StereoKit hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit input_controller_menu();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_override(
					global::StereoKit.Handed__StereoKit hand, 
					global::StereoKit.HandJoint__StereoKit* hand_joints);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="input_hand_override", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_override__0(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr hand_joints);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_mouse();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_head();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_eyes();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit input_eyes_tracked();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit input_key(global::StereoKit.Key__StereoKit key);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint input_text_consume();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_text_reset();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_visible(
					global::StereoKit.Handed__StereoKit hand, 
					int visible);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_solid(
					global::StereoKit.Handed__StereoKit hand, 
					int solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_material(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int world_has_bounds();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit world_get_bounds_size();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit world_get_bounds_pose();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit world_from_spatial_graph(
					byte* spatial_graph_node_id, 
					int dynamic, 
					long time);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pose__StereoKit world_from_perception_anchor(global::System.IntPtr perception_spatial_anchor);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int world_try_from_spatial_graph(
					byte* spatial_graph_node_id, 
					int dynamic, 
					long time, 
					global::StereoKit.Pose__StereoKit* out_pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int world_try_from_perception_anchor(
					global::System.IntPtr perception_spatial_anchor, 
					global::StereoKit.Pose__StereoKit* out_pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int world_raycast(
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Ray__StereoKit* out_intersection);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void world_set_occlusion_enabled(int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int world_get_occlusion_enabled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void world_set_raycast_enabled(int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int world_get_raycast_enabled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void world_set_occlusion_material(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr world_get_occlusion_material();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void world_set_refresh_type(global::StereoKit.WorldRefresh__StereoKit refresh_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.WorldRefresh__StereoKit world_get_refresh_type();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void world_set_refresh_radius(float radius_meters);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float world_get_refresh_radius();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void world_set_refresh_interval(float every_seconds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float world_get_refresh_interval();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_subscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					void* event_callback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_unsubscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					void* event_callback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_fire_event(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::System.IntPtr pointer);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BackendXRType__StereoKit backend_xr_get_type();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong backend_openxr_get_instance();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong backend_openxr_get_session();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong backend_openxr_get_space();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long backend_openxr_get_time();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long backend_openxr_get_eyes_sample_time();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr backend_openxr_get_function(byte* function_name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int backend_openxr_ext_enabled(byte* extension_name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void backend_openxr_ext_request(byte* extension_name);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void backend_openxr_composition_layer(
					global::System.IntPtr XrCompositionLayerBaseHeader, 
					int layer_size, 
					int sort_order);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BackendPlatform__StereoKit backend_platform_get();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr backend_android_get_java_vm();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr backend_android_get_activity();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr backend_android_get_jni_env();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BackendGraphics__StereoKit backend_graphics_get();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr backend_d3d11_get_d3d_device();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr backend_d3d11_get_d3d_context();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_write(
					global::StereoKit.LogLevel__StereoKit level, 
					byte* text);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_set_filter(global::StereoKit.LogLevel__StereoKit level);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_subscribe(void* on_log);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_unsubscribe(void* on_log);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void assets_releaseref_threadsafe(global::System.IntPtr asset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int assets_current_task();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int assets_total_tasks();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int assets_current_task_priority();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void assets_block_for_priority(int priority);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_quadrant_size_verts(
					global::StereoKit.Vertex__StereoKit* ref_vertices, 
					int vertex_count, 
					float overflow);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_quadrant_size_mesh(
					global::System.IntPtr ref_mesh, 
					float overflow);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_show_volumes(int show);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_enable_far_interact(int enable);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_far_interact_enabled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_settings(global::StereoKit.UISettings__StereoKit settings);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_set_color(global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_set_theme_color(
					global::StereoKit.UIColor__StereoKit color_type, 
					global::StereoKit.Color__StereoKit color_gamma);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit ui_get_theme_color(global::StereoKit.UIColor__StereoKit color_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_set_element_visual(
					global::StereoKit.UIVisual__StereoKit element_visual, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Vec2__StereoKit min_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_push_text_style(global::StereoKit.TextStyle__StereoKit style);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_text_style();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_push_tint(global::StereoKit.Color__StereoKit tint_gamma);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_tint();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_push_enabled(int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_enabled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_push_preserve_keyboard(int preserve_keyboard);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_preserve_keyboard();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_push_surface(
					global::StereoKit.Pose__StereoKit surface_pose, 
					global::StereoKit.Vec3__StereoKit layout_start, 
					global::StereoKit.Vec2__StereoKit layout_dimensions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_surface();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong ui_push_id_16(ushort* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong ui_push_idi(int id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_id();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong ui_stack_hash_16(ushort* str);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_layout_area(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec2__StereoKit dimensions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit ui_layout_remaining();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit ui_layout_at();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Bounds__StereoKit ui_layout_last();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Bounds__StereoKit ui_layout_reserve(
					global::StereoKit.Vec2__StereoKit size, 
					int add_padding, 
					float depth);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_last_element_hand_used(global::StereoKit.Handed__StereoKit hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_last_element_active();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_last_element_focused();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit ui_area_remaining();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_nextline();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_sameline();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float ui_line_height();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_space(float space);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_is_interacting(global::StereoKit.Handed__StereoKit hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_button_behavior(
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size, 
					ulong id, 
					float* finger_offset, 
					global::StereoKit.BtnState__StereoKit* button_state, 
					global::StereoKit.BtnState__StereoKit* focus_state);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_volumei_at_16(
					ushort* id, 
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.UIConfirm__StereoKit interact_type, 
					global::System.IntPtr out_opt_hand, 
					global::System.IntPtr out_opt_focus_state);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="ui_volumei_at_16", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_volumei_at_16__0(
					ushort* id, 
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.UIConfirm__StereoKit interact_type, 
					global::StereoKit.Handed__StereoKit* out_opt_hand, 
					global::System.IntPtr out_opt_focus_state);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="ui_volumei_at_16", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_volumei_at_16__1(
					ushort* id, 
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.UIConfirm__StereoKit interact_type, 
					global::StereoKit.Handed__StereoKit* out_opt_hand, 
					global::StereoKit.BtnState__StereoKit* out_opt_focus_state);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_volume_at_16(
					ushort* id, 
					global::StereoKit.Bounds__StereoKit bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_interact_volume_at(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Handed__StereoKit* out_hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_at_16(
					ushort* text, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_img_16(
					ushort* text, 
					global::System.IntPtr image, 
					global::StereoKit.UIBtnLayout__StereoKit image_layout, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_round_at_16(
					ushort* text, 
					global::System.IntPtr image_sprite, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					float diameter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_toggle_at_16(
					ushort* text, 
					int* pressed, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_progress_bar_at(
					float percent, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_hslider_at_16(
					ushort* id, 
					float* value, 
					float min, 
					float max, 
					float step, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIConfirm__StereoKit confirm_method);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_hslider_at_f64_16(
					ushort* id, 
					double* value, 
					double min, 
					double max, 
					double step, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIConfirm__StereoKit confirm_method);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_hseparator();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_label_16(
					ushort* text, 
					int use_padding);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_label_sz_16(
					ushort* text, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_text_16(
					ushort* text, 
					global::StereoKit.TextAlign__StereoKit text_align);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_image(
					global::System.IntPtr sprite_image, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_16(ushort* text);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_sz_16(
					ushort* text, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", EntryPoint="ui_button_img_16", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_img_16__0(
					ushort* text, 
					global::System.IntPtr image, 
					global::StereoKit.UIBtnLayout__StereoKit image_layout);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_img_sz_16(
					ushort* text, 
					global::System.IntPtr image, 
					global::StereoKit.UIBtnLayout__StereoKit image_layout, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_round_16(
					ushort* id, 
					global::System.IntPtr image, 
					float diameter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_toggle_16(
					ushort* text, 
					int* pressed);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_toggle_sz_16(
					ushort* text, 
					int* pressed, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_model(
					global::System.IntPtr model, 
					global::StereoKit.Vec2__StereoKit ui_size, 
					float model_scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_input_16(
					ushort* id, 
					ushort* buffer, 
					int buffer_size, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.TextContext__StereoKit type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_progress_bar(
					float percent, 
					float width);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_hslider_16(
					ushort* id, 
					float* value, 
					float min, 
					float max, 
					float step, 
					float width, 
					global::StereoKit.UIConfirm__StereoKit confirm_method);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_hslider_f64_16(
					ushort* id, 
					double* value, 
					double min, 
					double max, 
					double step, 
					float width, 
					global::StereoKit.UIConfirm__StereoKit confirm_method);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_handle_begin_16(
					ushort* text, 
					global::StereoKit.Pose__StereoKit* movement, 
					global::StereoKit.Bounds__StereoKit handle, 
					int draw, 
					global::StereoKit.UIMove__StereoKit move_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_handle_end();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_window_begin_16(
					ushort* text, 
					global::StereoKit.Pose__StereoKit* pose, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIWin__StereoKit window_type, 
					global::StereoKit.UIMove__StereoKit move_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_window_end();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_panel_at(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIPad__StereoKit padding);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_panel_begin(global::StereoKit.UIPad__StereoKit padding);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_panel_end();
	}

	public unsafe static partial class kernel32_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("kernel32", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr LoadLibraryW(ushort* fileName);
	}

	public unsafe static partial class dl_PInvokes
	{
		public static global::System.IntPtr dlopen(
					byte* fileName, 
					int flags)
		{
			throw new global::System.TypeLoadException("Unresolved P/Invoke method \'dl!dlopen\' from this method. Please look for this method in build warnings for more " +
					"details. ");
		}
	}

	public unsafe static partial class libdl_so_2_PInvokes
	{
		public static global::System.IntPtr dlopen2(
					byte* fileName, 
					int flags)
		{
			throw new global::System.TypeLoadException("Unresolved P/Invoke method \'libdl.so.2!dlopen2\' from this method. Please look for this method in build warnings " +
					"for more details. ");
		}
	}

	public unsafe static partial class kernel32_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr GetStdHandle(int nStdHandle);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					uint* lpMode);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int SetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					uint dwMode);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void GetNativeSystemInfo(global::_.Interop_Kernel32_SYSTEM_INFO__System_Runtime_InteropServices_RuntimeInformation* lpSystemInfo);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="GetStdHandle", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr GetStdHandle__0(int nStdHandle);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WriteFile(
					global::System.IntPtr handle, 
					byte* bytes, 
					int numBytesToWrite, 
					int* numBytesWritten, 
					global::System.IntPtr mustBeZero);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static uint GetFileType(global::System.IntPtr hFile);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static uint GetConsoleOutputCP();

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ReadFile(
					global::System.IntPtr handle, 
					byte* bytes, 
					int numBytesToRead, 
					int* numBytesRead, 
					global::System.IntPtr mustBeZero);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="ReadConsoleW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ReadConsole(
					global::System.IntPtr hConsoleInput, 
					byte* lpBuffer, 
					int nNumberOfCharsToRead, 
					int* lpNumberOfCharsRead, 
					global::System.IntPtr pInputControl);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="WriteConsoleW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WriteConsole(
					global::System.IntPtr hConsoleOutput, 
					byte* lpBuffer, 
					int nNumberOfCharsToWrite, 
					int* lpNumberOfCharsWritten, 
					global::System.IntPtr lpReservedMustBeNull);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static uint GetConsoleCP();

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WideCharToMultiByte(
					uint CodePage, 
					uint dwFlags, 
					ushort* lpWideCharStr, 
					int cchWideChar, 
					byte* lpMultiByteStr, 
					int cbMultiByte, 
					global::System.IntPtr lpDefaultChar, 
					global::System.IntPtr lpUsedDefaultChar);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int MultiByteToWideChar(
					uint CodePage, 
					uint dwFlags, 
					byte* lpMultiByteStr, 
					int cbMultiByte, 
					ushort* lpWideCharStr, 
					int cchWideChar);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="GetCPInfoExW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetCPInfoExW__0(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Console* lpCPInfoEx);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="GetConsoleMode", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetConsoleMode__0(
					global::System.IntPtr handle, 
					int* mode);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="FormatMessageW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int FormatMessage(
					int dwFlags, 
					global::System.IntPtr lpSource, 
					uint dwMessageId, 
					int dwLanguageId, 
					ushort* lpBuffer, 
					int nSize, 
					global::System.IntPtr* arguments);
	}

	public unsafe static partial class _MRT__PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpGetFuncEvalParameterBufferSize();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpGetFuncEvalMode();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpRecordDebuggeeInitiatedHandle(void* objectHandle);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void RhpVerifyDebuggerCleanup();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr RhpGetCurrentThread();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhWaitForPendingFinalizers(int allowReentrantWait);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhYield", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int _RhYield();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void RhFlushProcessWriteBuffers();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhCallDescrWorker", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhCallDescrWorkerNative(global::System.IntPtr callDescr);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memmove(
					byte* dmem, 
					byte* smem, 
					ulong size);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memset(
					byte* mem, 
					int value, 
					ulong size);
	}

	public unsafe static partial class __PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("*", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void CallingConventionConverter_GetStubs(
					global::System.IntPtr* returnVoidStub, 
					global::System.IntPtr* returnIntegerStub, 
					global::System.IntPtr* commonStub);
	}

	public unsafe static partial class api_ms_win_core_winrt_string_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-string-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WindowsCreateStringReference(
					ushort* sourceString, 
					uint length, 
					global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop* phstringHeader, 
					void* hstring);
	}

	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetLastError();

		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SetLastError(uint dwErrCode);
	}

	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RoInitialize(uint initType);
	}

	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int IsValidLocaleName(ushort* lpLocaleName);

		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ResolveLocaleName(
					ushort* lpNameToResolve, 
					ushort* lpLocaleName, 
					int cchLocaleName);
	}

	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-com-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					global::System.IntPtr* ppv);
	}

	public unsafe static partial class OleAut32_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("OleAut32", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SysFreeString(global::System.IntPtr bstr);
	}

	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-robuffer-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int RoGetBufferMarshaler(void** bufferMarshalerPtr);
	}
}

